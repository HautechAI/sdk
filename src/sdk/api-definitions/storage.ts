import { CoreApi, useApi, wrapCustomMethod } from '../../api-utils';
import { type GetStorageRecordParamsDto, type StorageRecordsResultDtoValue } from '../../autogenerated/schemas';
import { SDK } from '../../types';

export const useStorageApi = (hautechApi: CoreApi) =>
    useApi({
        create: hautechApi.storageControllerCreateRecordV1,
        getMany: hautechApi.storageControllerGetRecordsV1,
        delete: hautechApi.storageControllerDeleteRecordV1,
        update: hautechApi.storageControllerUpdateRecordV1,
        getManyMap: wrapCustomMethod(async function (
            this: any,
            params: GetStorageRecordParamsDto,
        ): Promise<{ [key: string]: StorageRecordsResultDtoValue }> {
            const sdk: SDK = this;

            const result = await sdk.storage.getMany(params);

            return result.reduce((res: { [key: string]: StorageRecordsResultDtoValue }, item) => {
                res[item.key] = item.value;

                return res;
            }, {});
        }),
    });
