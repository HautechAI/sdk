import { useVideosApi } from './api-definitions/videos';
import { useWorkflowsApi } from './api-definitions/workflows';
import { useStorageApi } from './api-definitions/storage';
import { useStacksApi } from './api-definitions/stacks';
import { usePosesApi } from './api-definitions/poses';
import { useImagesApi } from './api-definitions/images';
import { useOperationsApi } from './api-definitions/operations';
import { useGroupsApi } from './api-definitions/groups';
import { useAccountsApi } from './api-definitions/accounts';
import { useCollectionsApi } from './api-definitions/collections';
import { useBalancesApi } from './api-definitions/balances';
import { useAccessApi } from './api-definitions/access';
import { usePipelinesApi } from './api-definitions/pipelines';
import { useUploadApi } from './api-definitions/upload';
import { useChatsApi } from './api-definitions/chats';
import { useWsClient, WsClient } from './ws-client';
import { Config } from '../config';
import { usePipelineDefinitions } from '../autogenerated/pipeline-methods';

export const apiDefinitions = {
    videos: useVideosApi(),
    workflows: useWorkflowsApi(),
    storage: useStorageApi(),
    stacks: useStacksApi(),
    poses: usePosesApi(),
    images: useImagesApi(),
    operations: useOperationsApi(),
    groups: useGroupsApi(),
    accounts: useAccountsApi(),
    collections: useCollectionsApi(),
    chats: useChatsApi(),
    balances: useBalancesApi(),
    access: useAccessApi(),
    pipelines: usePipelinesApi(),
    upload: useUploadApi(),
};

export const pipelineDefinitions = usePipelineDefinitions();

export const getWsClientDefinitions = (config: Config): { ws: WsClient } => ({
    ws: useWsClient(config),
});
