import { createTokenSigner } from '../token';
import { createDirectorySDK, createSDK } from '../sdk';
import { v4 } from 'uuid';
import { MethodsPermissions } from '../autogenerated/permissions';
import { PartialDeep } from 'type-fest';

export const createTestSdk = () => {
    const tokenSigner = createTokenSigner({
        appId: process.env.APP_ID!,
        appKeyId: process.env.APP_KEY_ID!,
        appKeySecret: process.env.APP_KEY_SECRET!,
    });

    let sdk = createSDK({
        baseUrl: process.env.API_CORE_URL,
        authToken: () => tokenSigner.createRootToken({ expiresInSeconds: 60 * 60 * 24 * 30 }),
        wsConfig: {
            transports: ['websocket'],
        },
    });

    return sdk;
};

export const createTestDirectorySdk = (accountId?: string, permissions?: PartialDeep<MethodsPermissions>) => {
    const tokenSigner = createTokenSigner({
        appId: process.env.APP_ID!,
        appKeyId: process.env.APP_KEY_ID!,
        appKeySecret: process.env.APP_KEY_SECRET!,
    });

    return createDirectorySDK({
        baseUrl: process.env.API_DIRECTORY_URL,
        authToken: () =>
            accountId
                ? tokenSigner.createAccountToken({
                      expiresInSeconds: 60 * 60 * 24 * 30,
                      accountId,
                      permissions,
                      kind: 'directory-api',
                  })
                : tokenSigner.createRootToken({
                      expiresInSeconds: 60 * 60 * 24 * 30,
                      kind: 'directory-api',
                  }),
    });
};
