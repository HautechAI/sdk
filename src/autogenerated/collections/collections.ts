/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Hautech API
 * OpenAPI spec version: 1.0
 */
import type {
  AddItemsToCollectionControllerParamsDto,
  CollectionEntity,
  CollectionsControllerListCollectionsV1Params,
  CollectionsControllerListItemsV1Params,
  CreateCollectionParamsDto,
  ListCollectionItemsDto,
  ListCollectionsDto,
  RemoveItemsFromCollectionControllerParamsDto,
  ResourceEntity,
  UpdateMetadataDto
} from '.././schemas';

import { axiosMutator } from '../../api-utils';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getCollections = () => {
const collectionsControllerCreateCollectionV1 = (
    createCollectionParamsDto: CreateCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/collections`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createCollectionParamsDto
    },
      options);
    }
  const collectionsControllerListCollectionsV1 = (
    params?: CollectionsControllerListCollectionsV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListCollectionsDto>(
      {url: `/v1/collections`, method: 'GET',
        params
    },
      options);
    }
  const collectionsControllerGetCollectionV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/collections/${id}`, method: 'GET'
    },
      options);
    }
  const collectionsControllerUpdateMetadataV1 = (
    id: string,
    updateMetadataDto: UpdateMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResourceEntity>(
      {url: `/v1/collections/${id}/metadata`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateMetadataDto
    },
      options);
    }
  const collectionsControllerAddItemsV1 = (
    id: string,
    addItemsToCollectionControllerParamsDto: AddItemsToCollectionControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/collections/${id}/items/add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addItemsToCollectionControllerParamsDto
    },
      options);
    }
  const collectionsControllerListItemsV1 = (
    id: string,
    params?: CollectionsControllerListItemsV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListCollectionItemsDto>(
      {url: `/v1/collections/${id}/items`, method: 'GET',
        params
    },
      options);
    }
  const collectionsControllerRemoveItemsV1 = (
    id: string,
    removeItemsFromCollectionControllerParamsDto: RemoveItemsFromCollectionControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/collections/${id}/items/remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeItemsFromCollectionControllerParamsDto
    },
      options);
    }
  return {collectionsControllerCreateCollectionV1,collectionsControllerListCollectionsV1,collectionsControllerGetCollectionV1,collectionsControllerUpdateMetadataV1,collectionsControllerAddItemsV1,collectionsControllerListItemsV1,collectionsControllerRemoveItemsV1}};
export type CollectionsControllerCreateCollectionV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCollections>['collectionsControllerCreateCollectionV1']>>>
export type CollectionsControllerListCollectionsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCollections>['collectionsControllerListCollectionsV1']>>>
export type CollectionsControllerGetCollectionV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCollections>['collectionsControllerGetCollectionV1']>>>
export type CollectionsControllerUpdateMetadataV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCollections>['collectionsControllerUpdateMetadataV1']>>>
export type CollectionsControllerAddItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCollections>['collectionsControllerAddItemsV1']>>>
export type CollectionsControllerListItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCollections>['collectionsControllerListItemsV1']>>>
export type CollectionsControllerRemoveItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCollections>['collectionsControllerRemoveItemsV1']>>>
