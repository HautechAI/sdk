/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Hautech API
 * OpenAPI spec version: 1.0
 */
import type {
  AccountEntity,
  AddAccountToGroupParamsDto,
  AddBalanceParamsDto,
  AddItemsToCollectionParamsDto,
  AddItemsToStackParamsDto,
  AlphabakeVtonV1Request,
  AlphabakeVtonV1Response,
  AnimateCreatomateV1Request,
  AnimateCreatomateV1Response,
  AnimateKling16ProV1Request,
  AnimateKling16ProV1Response,
  AnimateKling21V1Request,
  AnimateKling21V1Response,
  AttachAccessParamsDto,
  BalanceResultDto,
  CollectionEntity,
  CompositeV1Request,
  CompositeV1Response,
  ContrastV1Request,
  ContrastV1Response,
  CreateAccountParamsDto,
  CreateCollectionParamsDto,
  CreateStackParamsDto,
  CreateStorageRecordParamsDto,
  CropV1Request,
  CropV1Response,
  CutV1Request,
  CutV1Response,
  DeleteParamsDto,
  DeleteStorageParamsDto,
  EchoV1Request,
  EchoV1Response,
  EditFluxKontextDevV1Request,
  EditFluxKontextDevV1Response,
  FashnVton16V1Request,
  FashnVton16V1Response,
  GetAccountParamsDto,
  GetBalanceParamsDto,
  GetCollectionParamsDto,
  GetGroupParamsDto,
  GetImageParamsDto,
  GetImageRepresentationParamsDto,
  GetOperationParamsDto,
  GetOperationsParamsDto,
  GetPoseParamsDto,
  GetStackParamsDto,
  GetStorageRecordParamsDto,
  GetUrlsForImagesParamsDto,
  GetVideoParamsDto,
  GetVideosParamsDto,
  GoogleNanoBananaV1Request,
  GoogleNanoBananaV1Response,
  GptV1Request,
  GptV1Response,
  GptV2Request,
  GptV2Response,
  GptV3Request,
  GptV3Response,
  GroupEntity,
  HauteLindaV1Request,
  HauteLindaV1Response,
  HauteNaomiPrepareDatasetV1Request,
  HauteNaomiPrepareDatasetV1Response,
  HauteNaomiTrainV1Request,
  HauteNaomiTrainV1Response,
  HauteNaomiV1Request,
  HauteNaomiV1Response,
  IdeogramCharacterV1Request,
  IdeogramCharacterV1Response,
  ImageEntity,
  ImageRepresentationResponseDto,
  ImageUrlResponseDto,
  Imagen4V1Request,
  Imagen4V1Response,
  ImagineFlux11ProUltraV1Request,
  ImagineFlux11ProUltraV1Response,
  ImagineKateV1Request,
  ImagineKateV1Response,
  InpaintKateV1Request,
  InpaintKateV1Response,
  ListAccountsDto,
  ListAccountsParamsDto,
  ListCollectionItemsDto,
  ListCollectionItemsParamsDto,
  ListCollectionsDto,
  ListCollectionsParamsDto,
  ListOperationsDto,
  ListOperationsParamsDto,
  ListPosesDto,
  ListPosesParamsDto,
  ListStacksDto,
  ListStacksParamsDto,
  LumaPhotonV1Request,
  LumaPhotonV1Response,
  MathV1Request,
  MathV1Response,
  ModifyAccessParamsDto,
  NegateImageV1Request,
  NegateImageV1Response,
  NoiseV1Request,
  NoiseV1Response,
  ObjectDetectionV1Request,
  ObjectDetectionV1Response,
  OnecompilerV1Request,
  OnecompilerV1Response,
  OperationEntity,
  PipelineMapV1Request,
  PipelineMapV1Response,
  PoseEntity,
  PoseEstimationV1Request,
  PoseEstimationV1Response,
  RemoveAccountFromGroupParamsDto,
  RemoveItemsFromCollectionParamsDto,
  RemoveItemsFromStackParamsDto,
  ResizeV1Request,
  ResizeV1Response,
  SeedV1Request,
  SeedV1Response,
  Seedream3V1Request,
  Seedream3V1Response,
  Seedream4EditV1Request,
  Seedream4EditV1Response,
  SegmentAnythingEmbeddingsV1Request,
  SegmentAnythingEmbeddingsV1Response,
  SegmentAnythingMaskV1Request,
  SegmentAnythingMaskV1Response,
  SelfAccountDto,
  SetPosePreviewDto,
  StackEntity,
  StorageEntity,
  StorageRecordsResultDto,
  StringsTemplateV1Request,
  StringsTemplateV1Response,
  TopazUpscaleV1Request,
  TopazUpscaleV1Response,
  TranslateV1Request,
  TranslateV1Response,
  UpdateAccountParamsDto,
  UpdateResourceMetadataDto,
  UpdateStorageRecordParamsDto,
  UpscaleV1Request,
  UpscaleV1Response,
  Veo3FastV1Request,
  Veo3FastV1Response,
  Veo3V1Request,
  Veo3V1Response,
  VideoEntity,
  VideoUrlResponseDto,
  VtonGiseleV1Request,
  VtonGiseleV1Response,
  WaitOperationParamsDto
} from '.././schemas';

import { axiosMutator } from '../../api-utils';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getCall = () => {
const callControllerCallAccessGrantV1 = (
    modifyAccessParamsDto: ModifyAccessParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/access.grant`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: modifyAccessParamsDto
    },
      options);
    }
  const callControllerCallAccessAttachV1 = (
    attachAccessParamsDto: AttachAccessParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/access.attach`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: attachAccessParamsDto
    },
      options);
    }
  const callControllerCallAccountsCreateV1 = (
    createAccountParamsDto: CreateAccountParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/call/accounts.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createAccountParamsDto
    },
      options);
    }
  const callControllerCallAccountsGetV1 = (
    getAccountParamsDto: GetAccountParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/call/accounts.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getAccountParamsDto
    },
      options);
    }
  const callControllerCallAccountsSelfV1 = (
    callControllerCallAccountsSelfV1Body: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SelfAccountDto>(
      {url: `/v1/call/accounts.self`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: callControllerCallAccountsSelfV1Body
    },
      options);
    }
  const callControllerCallAccountsListV1 = (
    listAccountsParamsDto: ListAccountsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListAccountsDto>(
      {url: `/v1/call/accounts.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listAccountsParamsDto
    },
      options);
    }
  const callControllerCallAccountsUpdateV1 = (
    updateAccountParamsDto: UpdateAccountParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/call/accounts.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateAccountParamsDto
    },
      options);
    }
  const callControllerCallAccountsBalanceAddV1 = (
    addBalanceParamsDto: AddBalanceParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/accounts.balance.add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addBalanceParamsDto
    },
      options);
    }
  const callControllerCallAccountsBalanceSelfV1 = (
    callControllerCallAccountsBalanceSelfV1Body: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<BalanceResultDto>(
      {url: `/v1/call/accounts.balance.self`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: callControllerCallAccountsBalanceSelfV1Body
    },
      options);
    }
  const callControllerCallAccountsBalanceGetV1 = (
    getBalanceParamsDto: GetBalanceParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<BalanceResultDto>(
      {url: `/v1/call/accounts.balance.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getBalanceParamsDto
    },
      options);
    }
  const callControllerCallCollectionsCreateV1 = (
    createCollectionParamsDto: CreateCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/call/collections.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createCollectionParamsDto
    },
      options);
    }
  const callControllerCallCollectionsGetV1 = (
    getCollectionParamsDto: GetCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/call/collections.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getCollectionParamsDto
    },
      options);
    }
  const callControllerCallCollectionsListV1 = (
    listCollectionsParamsDto: ListCollectionsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListCollectionsDto>(
      {url: `/v1/call/collections.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listCollectionsParamsDto
    },
      options);
    }
  const callControllerCallCollectionsMetadataUpdateV1 = (
    updateResourceMetadataDto: UpdateResourceMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/call/collections.metadata.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateResourceMetadataDto
    },
      options);
    }
  const callControllerCallCollectionsItemsAddV1 = (
    addItemsToCollectionParamsDto: AddItemsToCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/collections.items.add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addItemsToCollectionParamsDto
    },
      options);
    }
  const callControllerCallCollectionsItemsListV1 = (
    listCollectionItemsParamsDto: ListCollectionItemsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListCollectionItemsDto>(
      {url: `/v1/call/collections.items.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listCollectionItemsParamsDto
    },
      options);
    }
  const callControllerCallCollectionsItemsRemoveV1 = (
    removeItemsFromCollectionParamsDto: RemoveItemsFromCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/collections.items.remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeItemsFromCollectionParamsDto
    },
      options);
    }
  const callControllerCallGroupsCreateV1 = (
    callControllerCallGroupsCreateV1Body: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GroupEntity>(
      {url: `/v1/call/groups.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: callControllerCallGroupsCreateV1Body
    },
      options);
    }
  const callControllerCallGroupsGetV1 = (
    getGroupParamsDto: GetGroupParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GroupEntity>(
      {url: `/v1/call/groups.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getGroupParamsDto
    },
      options);
    }
  const callControllerCallGroupsDeleteV1 = (
    deleteParamsDto: DeleteParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/groups.delete`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: deleteParamsDto
    },
      options);
    }
  const callControllerCallGroupsAccountsAddV1 = (
    addAccountToGroupParamsDto: AddAccountToGroupParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/groups.accounts.add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addAccountToGroupParamsDto
    },
      options);
    }
  const callControllerCallGroupsAccountsRemoveV1 = (
    removeAccountFromGroupParamsDto: RemoveAccountFromGroupParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/groups.accounts.remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeAccountFromGroupParamsDto
    },
      options);
    }
  const callControllerCallImagesGetManyV1 = (
    getUrlsForImagesParamsDto: GetUrlsForImagesParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageUrlResponseDto[]>(
      {url: `/v1/call/images.getMany`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getUrlsForImagesParamsDto
    },
      options);
    }
  const callControllerCallImagesGetV1 = (
    getImageParamsDto: GetImageParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageEntity>(
      {url: `/v1/call/images.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getImageParamsDto
    },
      options);
    }
  const callControllerCallImagesRepresentationsGetV1 = (
    getImageRepresentationParamsDto: GetImageRepresentationParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageRepresentationResponseDto>(
      {url: `/v1/call/images.representations.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getImageRepresentationParamsDto
    },
      options);
    }
  const callControllerCallVideosGetManyV1 = (
    getVideosParamsDto: GetVideosParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VideoUrlResponseDto[]>(
      {url: `/v1/call/videos.getMany`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getVideosParamsDto
    },
      options);
    }
  const callControllerCallVideosGetV1 = (
    getVideoParamsDto: GetVideoParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VideoEntity>(
      {url: `/v1/call/videos.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getVideoParamsDto
    },
      options);
    }
  const callControllerCallOperationsGetV1 = (
    getOperationParamsDto: GetOperationParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity>(
      {url: `/v1/call/operations.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getOperationParamsDto
    },
      options);
    }
  const callControllerCallOperationsGetManyV1 = (
    getOperationsParamsDto: GetOperationsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity[]>(
      {url: `/v1/call/operations.getMany`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getOperationsParamsDto
    },
      options);
    }
  const callControllerCallOperationsListV1 = (
    listOperationsParamsDto: ListOperationsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListOperationsDto>(
      {url: `/v1/call/operations.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listOperationsParamsDto
    },
      options);
    }
  const callControllerCallOperationsMetadataUpdateV1 = (
    updateResourceMetadataDto: UpdateResourceMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity>(
      {url: `/v1/call/operations.metadata.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateResourceMetadataDto
    },
      options);
    }
  const callControllerCallOperationsWaitV1 = (
    waitOperationParamsDto: WaitOperationParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity>(
      {url: `/v1/call/operations.wait`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: waitOperationParamsDto
    },
      options);
    }
  const callControllerCallOperationsRunHauteLindaV1V1 = (
    hauteLindaV1Request: HauteLindaV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<HauteLindaV1Response>(
      {url: `/v1/call/operations.run.haute.linda.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hauteLindaV1Request
    },
      options);
    }
  const callControllerCallOperationsRunHauteNaomiV1V1 = (
    hauteNaomiV1Request: HauteNaomiV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<HauteNaomiV1Response>(
      {url: `/v1/call/operations.run.haute.naomi.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hauteNaomiV1Request
    },
      options);
    }
  const callControllerCallOperationsRunInpaintKateV1V1 = (
    inpaintKateV1Request: InpaintKateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<InpaintKateV1Response>(
      {url: `/v1/call/operations.run.inpaint.kate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: inpaintKateV1Request
    },
      options);
    }
  const callControllerCallOperationsRunGptV1V1 = (
    gptV1Request: GptV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GptV1Response>(
      {url: `/v1/call/operations.run.gpt.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: gptV1Request
    },
      options);
    }
  const callControllerCallOperationsRunGptV2V1 = (
    gptV2Request: GptV2Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GptV2Response>(
      {url: `/v1/call/operations.run.gpt.v2`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: gptV2Request
    },
      options);
    }
  const callControllerCallOperationsRunGptV3V1 = (
    gptV3Request: GptV3Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GptV3Response>(
      {url: `/v1/call/operations.run.gpt.v3`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: gptV3Request
    },
      options);
    }
  const callControllerCallOperationsRunTranslateV1V1 = (
    translateV1Request: TranslateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<TranslateV1Response>(
      {url: `/v1/call/operations.run.translate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: translateV1Request
    },
      options);
    }
  const callControllerCallOperationsRunStringsTemplateV1V1 = (
    stringsTemplateV1Request: StringsTemplateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StringsTemplateV1Response>(
      {url: `/v1/call/operations.run.strings.template.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: stringsTemplateV1Request
    },
      options);
    }
  const callControllerCallOperationsRunImagineKateV1V1 = (
    imagineKateV1Request: ImagineKateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImagineKateV1Response>(
      {url: `/v1/call/operations.run.imagine.kate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: imagineKateV1Request
    },
      options);
    }
  const callControllerCallOperationsRunUpscaleV1V1 = (
    upscaleV1Request: UpscaleV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<UpscaleV1Response>(
      {url: `/v1/call/operations.run.upscale.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: upscaleV1Request
    },
      options);
    }
  const callControllerCallOperationsRunObjectDetectionV1V1 = (
    objectDetectionV1Request: ObjectDetectionV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ObjectDetectionV1Response>(
      {url: `/v1/call/operations.run.objectDetection.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: objectDetectionV1Request
    },
      options);
    }
  const callControllerCallOperationsRunSegmentAnythingEmbeddingsV1V1 = (
    segmentAnythingEmbeddingsV1Request: SegmentAnythingEmbeddingsV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SegmentAnythingEmbeddingsV1Response>(
      {url: `/v1/call/operations.run.segmentAnything.embeddings.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: segmentAnythingEmbeddingsV1Request
    },
      options);
    }
  const callControllerCallOperationsRunSegmentAnythingMaskV1V1 = (
    segmentAnythingMaskV1Request: SegmentAnythingMaskV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SegmentAnythingMaskV1Response>(
      {url: `/v1/call/operations.run.segmentAnything.mask.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: segmentAnythingMaskV1Request
    },
      options);
    }
  const callControllerCallOperationsRunPoseEstimationV1V1 = (
    poseEstimationV1Request: PoseEstimationV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PoseEstimationV1Response>(
      {url: `/v1/call/operations.run.poseEstimation.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: poseEstimationV1Request
    },
      options);
    }
  const callControllerCallOperationsRunCutV1V1 = (
    cutV1Request: CutV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CutV1Response>(
      {url: `/v1/call/operations.run.cut.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: cutV1Request
    },
      options);
    }
  const callControllerCallOperationsRunCropV1V1 = (
    cropV1Request: CropV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CropV1Response>(
      {url: `/v1/call/operations.run.crop.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: cropV1Request
    },
      options);
    }
  const callControllerCallOperationsRunNoiseV1V1 = (
    noiseV1Request: NoiseV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<NoiseV1Response>(
      {url: `/v1/call/operations.run.noise.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: noiseV1Request
    },
      options);
    }
  const callControllerCallOperationsRunResizeV1V1 = (
    resizeV1Request: ResizeV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResizeV1Response>(
      {url: `/v1/call/operations.run.resize.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: resizeV1Request
    },
      options);
    }
  const callControllerCallOperationsRunContrastV1V1 = (
    contrastV1Request: ContrastV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ContrastV1Response>(
      {url: `/v1/call/operations.run.contrast.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: contrastV1Request
    },
      options);
    }
  const callControllerCallOperationsRunCompositeV1V1 = (
    compositeV1Request: CompositeV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CompositeV1Response>(
      {url: `/v1/call/operations.run.composite.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: compositeV1Request
    },
      options);
    }
  const callControllerCallOperationsRunVtonGiseleV1V1 = (
    vtonGiseleV1Request: VtonGiseleV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VtonGiseleV1Response>(
      {url: `/v1/call/operations.run.vton.gisele.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: vtonGiseleV1Request
    },
      options);
    }
  const callControllerCallOperationsRunNegateImageV1V1 = (
    negateImageV1Request: NegateImageV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<NegateImageV1Response>(
      {url: `/v1/call/operations.run.negateImage.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: negateImageV1Request
    },
      options);
    }
  const callControllerCallOperationsRunEchoV1V1 = (
    echoV1Request: EchoV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<EchoV1Response>(
      {url: `/v1/call/operations.run.echo.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: echoV1Request
    },
      options);
    }
  const callControllerCallOperationsRunMathV1V1 = (
    mathV1Request: MathV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<MathV1Response>(
      {url: `/v1/call/operations.run.math.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: mathV1Request
    },
      options);
    }
  const callControllerCallOperationsRunAnimateKling16ProV1V1 = (
    animateKling16ProV1Request: AnimateKling16ProV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateKling16ProV1Response>(
      {url: `/v1/call/operations.run.animate.kling_1_6_pro.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateKling16ProV1Request
    },
      options);
    }
  const callControllerCallOperationsRunAnimateKling21V1V1 = (
    animateKling21V1Request: AnimateKling21V1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateKling21V1Response>(
      {url: `/v1/call/operations.run.animate.kling_2_1.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateKling21V1Request
    },
      options);
    }
  const callControllerCallOperationsRunAnimateCreatomateV1V1 = (
    animateCreatomateV1Request: AnimateCreatomateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateCreatomateV1Response>(
      {url: `/v1/call/operations.run.animate.creatomate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateCreatomateV1Request
    },
      options);
    }
  const callControllerCallOperationsRunOnecompilerV1V1 = (
    onecompilerV1Request: OnecompilerV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OnecompilerV1Response>(
      {url: `/v1/call/operations.run.onecompiler.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: onecompilerV1Request
    },
      options);
    }
  const callControllerCallOperationsRunEditFluxKontextDevV1V1 = (
    editFluxKontextDevV1Request: EditFluxKontextDevV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<EditFluxKontextDevV1Response>(
      {url: `/v1/call/operations.run.edit.flux_kontext_dev.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: editFluxKontextDevV1Request
    },
      options);
    }
  const callControllerCallOperationsRunVeo3V1V1 = (
    veo3V1Request: Veo3V1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<Veo3V1Response>(
      {url: `/v1/call/operations.run.veo3.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: veo3V1Request
    },
      options);
    }
  const callControllerCallOperationsRunVeo3FastV1V1 = (
    veo3FastV1Request: Veo3FastV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<Veo3FastV1Response>(
      {url: `/v1/call/operations.run.veo3.fast.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: veo3FastV1Request
    },
      options);
    }
  const callControllerCallOperationsRunPipelineMapV1V1 = (
    pipelineMapV1Request: PipelineMapV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PipelineMapV1Response>(
      {url: `/v1/call/operations.run.pipelineMap.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: pipelineMapV1Request
    },
      options);
    }
  const callControllerCallOperationsRunImagen4V1V1 = (
    imagen4V1Request: Imagen4V1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<Imagen4V1Response>(
      {url: `/v1/call/operations.run.imagen4.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: imagen4V1Request
    },
      options);
    }
  const callControllerCallOperationsRunTopazUpscaleV1V1 = (
    topazUpscaleV1Request: TopazUpscaleV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<TopazUpscaleV1Response>(
      {url: `/v1/call/operations.run.topaz.upscale.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: topazUpscaleV1Request
    },
      options);
    }
  const callControllerCallOperationsRunIdeogramCharacterV1V1 = (
    ideogramCharacterV1Request: IdeogramCharacterV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<IdeogramCharacterV1Response>(
      {url: `/v1/call/operations.run.ideogram.character.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: ideogramCharacterV1Request
    },
      options);
    }
  const callControllerCallOperationsRunSeedream3V1V1 = (
    seedream3V1Request: Seedream3V1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<Seedream3V1Response>(
      {url: `/v1/call/operations.run.seedream3.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: seedream3V1Request
    },
      options);
    }
  const callControllerCallOperationsRunLumaPhotonV1V1 = (
    lumaPhotonV1Request: LumaPhotonV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<LumaPhotonV1Response>(
      {url: `/v1/call/operations.run.luma.photon.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: lumaPhotonV1Request
    },
      options);
    }
  const callControllerCallOperationsRunImagineFlux11ProUltraV1V1 = (
    imagineFlux11ProUltraV1Request: ImagineFlux11ProUltraV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImagineFlux11ProUltraV1Response>(
      {url: `/v1/call/operations.run.imagine.flux_1_1_pro_ultra.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: imagineFlux11ProUltraV1Request
    },
      options);
    }
  const callControllerCallOperationsRunSeedV1V1 = (
    seedV1Request: SeedV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SeedV1Response>(
      {url: `/v1/call/operations.run.seed.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: seedV1Request
    },
      options);
    }
  const callControllerCallOperationsRunGoogleNanoBananaV1V1 = (
    googleNanoBananaV1Request: GoogleNanoBananaV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GoogleNanoBananaV1Response>(
      {url: `/v1/call/operations.run.google.nano_banana.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: googleNanoBananaV1Request
    },
      options);
    }
  const callControllerCallOperationsRunHauteNaomiTrainV1V1 = (
    hauteNaomiTrainV1Request: HauteNaomiTrainV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<HauteNaomiTrainV1Response>(
      {url: `/v1/call/operations.run.haute.naomi.train.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hauteNaomiTrainV1Request
    },
      options);
    }
  const callControllerCallOperationsRunHauteNaomiPrepareDatasetV1V1 = (
    hauteNaomiPrepareDatasetV1Request: HauteNaomiPrepareDatasetV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<HauteNaomiPrepareDatasetV1Response>(
      {url: `/v1/call/operations.run.haute.naomi.prepare_dataset.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hauteNaomiPrepareDatasetV1Request
    },
      options);
    }
  const callControllerCallOperationsRunFashnVton16V1V1 = (
    fashnVton16V1Request: FashnVton16V1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<FashnVton16V1Response>(
      {url: `/v1/call/operations.run.fashn.vton_1_6.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: fashnVton16V1Request
    },
      options);
    }
  const callControllerCallOperationsRunAlphabakeVtonV1V1 = (
    alphabakeVtonV1Request: AlphabakeVtonV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AlphabakeVtonV1Response>(
      {url: `/v1/call/operations.run.alphabake.vton.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: alphabakeVtonV1Request
    },
      options);
    }
  const callControllerCallOperationsRunSeedream4EditV1V1 = (
    seedream4EditV1Request: Seedream4EditV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<Seedream4EditV1Response>(
      {url: `/v1/call/operations.run.seedream.4_edit.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: seedream4EditV1Request
    },
      options);
    }
  const callControllerCallPosesGetV1 = (
    getPoseParamsDto: GetPoseParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PoseEntity>(
      {url: `/v1/call/poses.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getPoseParamsDto
    },
      options);
    }
  const callControllerCallPosesListV1 = (
    listPosesParamsDto: ListPosesParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListPosesDto>(
      {url: `/v1/call/poses.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listPosesParamsDto
    },
      options);
    }
  const callControllerCallPosesPreviewSetV1 = (
    setPosePreviewDto: SetPosePreviewDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/poses.preview.set`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: setPosePreviewDto
    },
      options);
    }
  const callControllerCallPosesMetadataUpdateV1 = (
    updateResourceMetadataDto: UpdateResourceMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/poses.metadata.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateResourceMetadataDto
    },
      options);
    }
  const callControllerCallStacksCreateV1 = (
    createStackParamsDto: CreateStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createStackParamsDto
    },
      options);
    }
  const callControllerCallStacksGetV1 = (
    getStackParamsDto: GetStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getStackParamsDto
    },
      options);
    }
  const callControllerCallStacksListV1 = (
    listStacksParamsDto: ListStacksParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListStacksDto>(
      {url: `/v1/call/stacks.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listStacksParamsDto
    },
      options);
    }
  const callControllerCallStacksMetadataUpdateV1 = (
    updateResourceMetadataDto: UpdateResourceMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.metadata.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateResourceMetadataDto
    },
      options);
    }
  const callControllerCallStacksItemsAddV1 = (
    addItemsToStackParamsDto: AddItemsToStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.items.add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addItemsToStackParamsDto
    },
      options);
    }
  const callControllerCallStacksItemsRemoveV1 = (
    removeItemsFromStackParamsDto: RemoveItemsFromStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.items.remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeItemsFromStackParamsDto
    },
      options);
    }
  const callControllerCallStorageCreateV1 = (
    createStorageRecordParamsDto: CreateStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageEntity>(
      {url: `/v1/call/storage.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createStorageRecordParamsDto
    },
      options);
    }
  const callControllerCallStorageDeleteV1 = (
    deleteStorageParamsDto: DeleteStorageParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/storage.delete`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: deleteStorageParamsDto
    },
      options);
    }
  const callControllerCallStorageGetManyV1 = (
    getStorageRecordParamsDto: GetStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageRecordsResultDto[]>(
      {url: `/v1/call/storage.getMany`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getStorageRecordParamsDto
    },
      options);
    }
  const callControllerCallStorageUpdateV1 = (
    updateStorageRecordParamsDto: UpdateStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageEntity>(
      {url: `/v1/call/storage.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateStorageRecordParamsDto
    },
      options);
    }
  return {callControllerCallAccessGrantV1,callControllerCallAccessAttachV1,callControllerCallAccountsCreateV1,callControllerCallAccountsGetV1,callControllerCallAccountsSelfV1,callControllerCallAccountsListV1,callControllerCallAccountsUpdateV1,callControllerCallAccountsBalanceAddV1,callControllerCallAccountsBalanceSelfV1,callControllerCallAccountsBalanceGetV1,callControllerCallCollectionsCreateV1,callControllerCallCollectionsGetV1,callControllerCallCollectionsListV1,callControllerCallCollectionsMetadataUpdateV1,callControllerCallCollectionsItemsAddV1,callControllerCallCollectionsItemsListV1,callControllerCallCollectionsItemsRemoveV1,callControllerCallGroupsCreateV1,callControllerCallGroupsGetV1,callControllerCallGroupsDeleteV1,callControllerCallGroupsAccountsAddV1,callControllerCallGroupsAccountsRemoveV1,callControllerCallImagesGetManyV1,callControllerCallImagesGetV1,callControllerCallImagesRepresentationsGetV1,callControllerCallVideosGetManyV1,callControllerCallVideosGetV1,callControllerCallOperationsGetV1,callControllerCallOperationsGetManyV1,callControllerCallOperationsListV1,callControllerCallOperationsMetadataUpdateV1,callControllerCallOperationsWaitV1,callControllerCallOperationsRunHauteLindaV1V1,callControllerCallOperationsRunHauteNaomiV1V1,callControllerCallOperationsRunInpaintKateV1V1,callControllerCallOperationsRunGptV1V1,callControllerCallOperationsRunGptV2V1,callControllerCallOperationsRunGptV3V1,callControllerCallOperationsRunTranslateV1V1,callControllerCallOperationsRunStringsTemplateV1V1,callControllerCallOperationsRunImagineKateV1V1,callControllerCallOperationsRunUpscaleV1V1,callControllerCallOperationsRunObjectDetectionV1V1,callControllerCallOperationsRunSegmentAnythingEmbeddingsV1V1,callControllerCallOperationsRunSegmentAnythingMaskV1V1,callControllerCallOperationsRunPoseEstimationV1V1,callControllerCallOperationsRunCutV1V1,callControllerCallOperationsRunCropV1V1,callControllerCallOperationsRunNoiseV1V1,callControllerCallOperationsRunResizeV1V1,callControllerCallOperationsRunContrastV1V1,callControllerCallOperationsRunCompositeV1V1,callControllerCallOperationsRunVtonGiseleV1V1,callControllerCallOperationsRunNegateImageV1V1,callControllerCallOperationsRunEchoV1V1,callControllerCallOperationsRunMathV1V1,callControllerCallOperationsRunAnimateKling16ProV1V1,callControllerCallOperationsRunAnimateKling21V1V1,callControllerCallOperationsRunAnimateCreatomateV1V1,callControllerCallOperationsRunOnecompilerV1V1,callControllerCallOperationsRunEditFluxKontextDevV1V1,callControllerCallOperationsRunVeo3V1V1,callControllerCallOperationsRunVeo3FastV1V1,callControllerCallOperationsRunPipelineMapV1V1,callControllerCallOperationsRunImagen4V1V1,callControllerCallOperationsRunTopazUpscaleV1V1,callControllerCallOperationsRunIdeogramCharacterV1V1,callControllerCallOperationsRunSeedream3V1V1,callControllerCallOperationsRunLumaPhotonV1V1,callControllerCallOperationsRunImagineFlux11ProUltraV1V1,callControllerCallOperationsRunSeedV1V1,callControllerCallOperationsRunGoogleNanoBananaV1V1,callControllerCallOperationsRunHauteNaomiTrainV1V1,callControllerCallOperationsRunHauteNaomiPrepareDatasetV1V1,callControllerCallOperationsRunFashnVton16V1V1,callControllerCallOperationsRunAlphabakeVtonV1V1,callControllerCallOperationsRunSeedream4EditV1V1,callControllerCallPosesGetV1,callControllerCallPosesListV1,callControllerCallPosesPreviewSetV1,callControllerCallPosesMetadataUpdateV1,callControllerCallStacksCreateV1,callControllerCallStacksGetV1,callControllerCallStacksListV1,callControllerCallStacksMetadataUpdateV1,callControllerCallStacksItemsAddV1,callControllerCallStacksItemsRemoveV1,callControllerCallStorageCreateV1,callControllerCallStorageDeleteV1,callControllerCallStorageGetManyV1,callControllerCallStorageUpdateV1}};
export type CallControllerCallAccessGrantV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccessGrantV1']>>>
export type CallControllerCallAccessAttachV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccessAttachV1']>>>
export type CallControllerCallAccountsCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccountsCreateV1']>>>
export type CallControllerCallAccountsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccountsGetV1']>>>
export type CallControllerCallAccountsSelfV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccountsSelfV1']>>>
export type CallControllerCallAccountsListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccountsListV1']>>>
export type CallControllerCallAccountsUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccountsUpdateV1']>>>
export type CallControllerCallAccountsBalanceAddV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccountsBalanceAddV1']>>>
export type CallControllerCallAccountsBalanceSelfV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccountsBalanceSelfV1']>>>
export type CallControllerCallAccountsBalanceGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallAccountsBalanceGetV1']>>>
export type CallControllerCallCollectionsCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallCollectionsCreateV1']>>>
export type CallControllerCallCollectionsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallCollectionsGetV1']>>>
export type CallControllerCallCollectionsListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallCollectionsListV1']>>>
export type CallControllerCallCollectionsMetadataUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallCollectionsMetadataUpdateV1']>>>
export type CallControllerCallCollectionsItemsAddV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallCollectionsItemsAddV1']>>>
export type CallControllerCallCollectionsItemsListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallCollectionsItemsListV1']>>>
export type CallControllerCallCollectionsItemsRemoveV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallCollectionsItemsRemoveV1']>>>
export type CallControllerCallGroupsCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallGroupsCreateV1']>>>
export type CallControllerCallGroupsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallGroupsGetV1']>>>
export type CallControllerCallGroupsDeleteV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallGroupsDeleteV1']>>>
export type CallControllerCallGroupsAccountsAddV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallGroupsAccountsAddV1']>>>
export type CallControllerCallGroupsAccountsRemoveV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallGroupsAccountsRemoveV1']>>>
export type CallControllerCallImagesGetManyV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallImagesGetManyV1']>>>
export type CallControllerCallImagesGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallImagesGetV1']>>>
export type CallControllerCallImagesRepresentationsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallImagesRepresentationsGetV1']>>>
export type CallControllerCallVideosGetManyV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallVideosGetManyV1']>>>
export type CallControllerCallVideosGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallVideosGetV1']>>>
export type CallControllerCallOperationsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsGetV1']>>>
export type CallControllerCallOperationsGetManyV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsGetManyV1']>>>
export type CallControllerCallOperationsListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsListV1']>>>
export type CallControllerCallOperationsMetadataUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsMetadataUpdateV1']>>>
export type CallControllerCallOperationsWaitV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsWaitV1']>>>
export type CallControllerCallOperationsRunHauteLindaV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunHauteLindaV1V1']>>>
export type CallControllerCallOperationsRunHauteNaomiV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunHauteNaomiV1V1']>>>
export type CallControllerCallOperationsRunInpaintKateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunInpaintKateV1V1']>>>
export type CallControllerCallOperationsRunGptV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunGptV1V1']>>>
export type CallControllerCallOperationsRunGptV2V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunGptV2V1']>>>
export type CallControllerCallOperationsRunGptV3V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunGptV3V1']>>>
export type CallControllerCallOperationsRunTranslateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunTranslateV1V1']>>>
export type CallControllerCallOperationsRunStringsTemplateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunStringsTemplateV1V1']>>>
export type CallControllerCallOperationsRunImagineKateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunImagineKateV1V1']>>>
export type CallControllerCallOperationsRunUpscaleV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunUpscaleV1V1']>>>
export type CallControllerCallOperationsRunObjectDetectionV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunObjectDetectionV1V1']>>>
export type CallControllerCallOperationsRunSegmentAnythingEmbeddingsV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunSegmentAnythingEmbeddingsV1V1']>>>
export type CallControllerCallOperationsRunSegmentAnythingMaskV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunSegmentAnythingMaskV1V1']>>>
export type CallControllerCallOperationsRunPoseEstimationV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunPoseEstimationV1V1']>>>
export type CallControllerCallOperationsRunCutV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunCutV1V1']>>>
export type CallControllerCallOperationsRunCropV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunCropV1V1']>>>
export type CallControllerCallOperationsRunNoiseV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunNoiseV1V1']>>>
export type CallControllerCallOperationsRunResizeV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunResizeV1V1']>>>
export type CallControllerCallOperationsRunContrastV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunContrastV1V1']>>>
export type CallControllerCallOperationsRunCompositeV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunCompositeV1V1']>>>
export type CallControllerCallOperationsRunVtonGiseleV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunVtonGiseleV1V1']>>>
export type CallControllerCallOperationsRunNegateImageV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunNegateImageV1V1']>>>
export type CallControllerCallOperationsRunEchoV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunEchoV1V1']>>>
export type CallControllerCallOperationsRunMathV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunMathV1V1']>>>
export type CallControllerCallOperationsRunAnimateKling16ProV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunAnimateKling16ProV1V1']>>>
export type CallControllerCallOperationsRunAnimateKling21V1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunAnimateKling21V1V1']>>>
export type CallControllerCallOperationsRunAnimateCreatomateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunAnimateCreatomateV1V1']>>>
export type CallControllerCallOperationsRunOnecompilerV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunOnecompilerV1V1']>>>
export type CallControllerCallOperationsRunEditFluxKontextDevV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunEditFluxKontextDevV1V1']>>>
export type CallControllerCallOperationsRunVeo3V1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunVeo3V1V1']>>>
export type CallControllerCallOperationsRunVeo3FastV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunVeo3FastV1V1']>>>
export type CallControllerCallOperationsRunPipelineMapV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunPipelineMapV1V1']>>>
export type CallControllerCallOperationsRunImagen4V1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunImagen4V1V1']>>>
export type CallControllerCallOperationsRunTopazUpscaleV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunTopazUpscaleV1V1']>>>
export type CallControllerCallOperationsRunIdeogramCharacterV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunIdeogramCharacterV1V1']>>>
export type CallControllerCallOperationsRunSeedream3V1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunSeedream3V1V1']>>>
export type CallControllerCallOperationsRunLumaPhotonV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunLumaPhotonV1V1']>>>
export type CallControllerCallOperationsRunImagineFlux11ProUltraV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunImagineFlux11ProUltraV1V1']>>>
export type CallControllerCallOperationsRunSeedV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunSeedV1V1']>>>
export type CallControllerCallOperationsRunGoogleNanoBananaV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunGoogleNanoBananaV1V1']>>>
export type CallControllerCallOperationsRunHauteNaomiTrainV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunHauteNaomiTrainV1V1']>>>
export type CallControllerCallOperationsRunHauteNaomiPrepareDatasetV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunHauteNaomiPrepareDatasetV1V1']>>>
export type CallControllerCallOperationsRunFashnVton16V1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunFashnVton16V1V1']>>>
export type CallControllerCallOperationsRunAlphabakeVtonV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunAlphabakeVtonV1V1']>>>
export type CallControllerCallOperationsRunSeedream4EditV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallOperationsRunSeedream4EditV1V1']>>>
export type CallControllerCallPosesGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallPosesGetV1']>>>
export type CallControllerCallPosesListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallPosesListV1']>>>
export type CallControllerCallPosesPreviewSetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallPosesPreviewSetV1']>>>
export type CallControllerCallPosesMetadataUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallPosesMetadataUpdateV1']>>>
export type CallControllerCallStacksCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStacksCreateV1']>>>
export type CallControllerCallStacksGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStacksGetV1']>>>
export type CallControllerCallStacksListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStacksListV1']>>>
export type CallControllerCallStacksMetadataUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStacksMetadataUpdateV1']>>>
export type CallControllerCallStacksItemsAddV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStacksItemsAddV1']>>>
export type CallControllerCallStacksItemsRemoveV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStacksItemsRemoveV1']>>>
export type CallControllerCallStorageCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStorageCreateV1']>>>
export type CallControllerCallStorageDeleteV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStorageDeleteV1']>>>
export type CallControllerCallStorageGetManyV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStorageGetManyV1']>>>
export type CallControllerCallStorageUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getCall>['callControllerCallStorageUpdateV1']>>>
