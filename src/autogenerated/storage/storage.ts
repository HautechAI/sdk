/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Hautech API
 * OpenAPI spec version: 1.0
 */
import type {
  CreateStorageRecordParamsDto,
  DeleteStorageParamsDto,
  GetStorageRecordParamsDto,
  StorageEntity,
  StorageRecordsResultDto,
  UpdateStorageRecordParamsDto
} from '.././schemas';

import { axiosMutator } from '../../api-utils';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getStorage = () => {
const storageControllerCreateRecordV1 = (
    createStorageRecordParamsDto: CreateStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageEntity>(
      {url: `/v1/storage`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createStorageRecordParamsDto
    },
      options);
    }
  const storageControllerGetRecordsV1 = (
    getStorageRecordParamsDto: GetStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageRecordsResultDto[]>(
      {url: `/v1/storage/many`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getStorageRecordParamsDto
    },
      options);
    }
  const storageControllerDeleteRecordV1 = (
    deleteStorageParamsDto: DeleteStorageParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/storage/delete`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: deleteStorageParamsDto
    },
      options);
    }
  const storageControllerUpdateRecordV1 = (
    updateStorageRecordParamsDto: UpdateStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageEntity>(
      {url: `/v1/storage/write`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateStorageRecordParamsDto
    },
      options);
    }
  return {storageControllerCreateRecordV1,storageControllerGetRecordsV1,storageControllerDeleteRecordV1,storageControllerUpdateRecordV1}};
export type StorageControllerCreateRecordV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStorage>['storageControllerCreateRecordV1']>>>
export type StorageControllerGetRecordsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStorage>['storageControllerGetRecordsV1']>>>
export type StorageControllerDeleteRecordV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStorage>['storageControllerDeleteRecordV1']>>>
export type StorageControllerUpdateRecordV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStorage>['storageControllerUpdateRecordV1']>>>
