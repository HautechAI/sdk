/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Hautech API
 * OpenAPI spec version: 1.0
 */
import type {
  CreateWorkflowParamsDto,
  ListWorkflowsDto,
  RunWorkflowParamsDto,
  RunWorkflowResponseDto,
  UpdateWorkflowParamsDto,
  WorkflowDto,
  WorkflowsControllerListWorkflowsV1Params
} from '.././schemas';

import { axiosMutator } from '../../api-utils';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getWorkflows = () => {
const workflowsControllerCreateWorkflowV1 = (
    createWorkflowParamsDto: CreateWorkflowParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<WorkflowDto>(
      {url: `/v1/workflows`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createWorkflowParamsDto
    },
      options);
    }
  const workflowsControllerListWorkflowsV1 = (
    params?: WorkflowsControllerListWorkflowsV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListWorkflowsDto>(
      {url: `/v1/workflows`, method: 'GET',
        params
    },
      options);
    }
  const workflowsControllerGetWorkflowV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<WorkflowDto>(
      {url: `/v1/workflows/${id}`, method: 'GET'
    },
      options);
    }
  const workflowsControllerUpdateWorkflowV1 = (
    id: string,
    updateWorkflowParamsDto: UpdateWorkflowParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<WorkflowDto>(
      {url: `/v1/workflows/${id}`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateWorkflowParamsDto
    },
      options);
    }
  const workflowsControllerDeleteWorkflowV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/workflows/${id}`, method: 'DELETE'
    },
      options);
    }
  const workflowsControllerRunWorkflowV1 = (
    id: string,
    runWorkflowParamsDto: RunWorkflowParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<RunWorkflowResponseDto>(
      {url: `/v1/workflows/${id}/run`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: runWorkflowParamsDto
    },
      options);
    }
  const workflowsControllerGetWorkflowSchemaV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/workflows/${id}/schema`, method: 'GET'
    },
      options);
    }
  return {workflowsControllerCreateWorkflowV1,workflowsControllerListWorkflowsV1,workflowsControllerGetWorkflowV1,workflowsControllerUpdateWorkflowV1,workflowsControllerDeleteWorkflowV1,workflowsControllerRunWorkflowV1,workflowsControllerGetWorkflowSchemaV1}};
export type WorkflowsControllerCreateWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getWorkflows>['workflowsControllerCreateWorkflowV1']>>>
export type WorkflowsControllerListWorkflowsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getWorkflows>['workflowsControllerListWorkflowsV1']>>>
export type WorkflowsControllerGetWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getWorkflows>['workflowsControllerGetWorkflowV1']>>>
export type WorkflowsControllerUpdateWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getWorkflows>['workflowsControllerUpdateWorkflowV1']>>>
export type WorkflowsControllerDeleteWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getWorkflows>['workflowsControllerDeleteWorkflowV1']>>>
export type WorkflowsControllerRunWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getWorkflows>['workflowsControllerRunWorkflowV1']>>>
export type WorkflowsControllerGetWorkflowSchemaV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getWorkflows>['workflowsControllerGetWorkflowSchemaV1']>>>
