/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Hautech API
 * OpenAPI spec version: 1.0
 */
import type {
  CreateImageParamsDto,
  GetUrlsForImagesParamsDto,
  ImageEntity,
  ImageRepresentationResponseDto,
  InitializeImageUploadResultDto
} from '.././schemas';

import { axiosMutator } from '../../api-utils';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getImages = () => {
const imagesControllerStartUploadV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<InitializeImageUploadResultDto>(
      {url: `/v1/images/upload/initialize`, method: 'POST'
    },
      options);
    }
  const imagesControllerFinalizeUploadV1 = (
    createImageParamsDto: CreateImageParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageEntity>(
      {url: `/v1/images/upload/finalize`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createImageParamsDto
    },
      options);
    }
  const imagesControllerGetUrlsV1 = (
    getUrlsForImagesParamsDto: GetUrlsForImagesParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageEntity[]>(
      {url: `/v1/images/many`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getUrlsForImagesParamsDto
    },
      options);
    }
  const imagesControllerGetImageV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageEntity>(
      {url: `/v1/images/${id}`, method: 'GET'
    },
      options);
    }
  const imagesControllerGetRepresentationV1 = (
    id: string,
    type: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageRepresentationResponseDto>(
      {url: `/v1/images/${id}/representation/${type}`, method: 'GET'
    },
      options);
    }
  return {imagesControllerStartUploadV1,imagesControllerFinalizeUploadV1,imagesControllerGetUrlsV1,imagesControllerGetImageV1,imagesControllerGetRepresentationV1}};
export type ImagesControllerStartUploadV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getImages>['imagesControllerStartUploadV1']>>>
export type ImagesControllerFinalizeUploadV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getImages>['imagesControllerFinalizeUploadV1']>>>
export type ImagesControllerGetUrlsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getImages>['imagesControllerGetUrlsV1']>>>
export type ImagesControllerGetImageV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getImages>['imagesControllerGetImageV1']>>>
export type ImagesControllerGetRepresentationV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getImages>['imagesControllerGetRepresentationV1']>>>
