/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Hautech API
 * OpenAPI spec version: 1.0
 */
import type {
  AccountEntity,
  AccountsControllerListAccountsV1Params,
  AddAccountToGroupControllerParamsDto,
  AddAccountToGroupParamsDto,
  AddBalanceControllerParamsDto,
  AddBalanceParamsDto,
  AddItemsToCollectionControllerParamsDto,
  AddItemsToCollectionParamsDto,
  AddItemsToStackControllerParamsDto,
  AddItemsToStackParamsDto,
  AnimateCreatomateV1Request,
  AnimateCreatomateV1Response,
  AnimateKling16ProV1Request,
  AnimateKling16ProV1Response,
  AnimateKling21V1Request,
  AnimateKling21V1Response,
  AttachAccessControllerParamsDto,
  AttachAccessParamsDto,
  BalanceResultDto,
  CollectionEntity,
  CollectionsControllerListCollectionsV1Params,
  CollectionsControllerListItemsV1Params,
  CompositeV1Request,
  CompositeV1Response,
  ContrastV1Request,
  ContrastV1Response,
  CreateAccountParamsDto,
  CreateCollectionParamsDto,
  CreateImageParamsDto,
  CreatePipelineParamsDto,
  CreateStackParamsDto,
  CreateStorageRecordParamsDto,
  CreateVideoParamsDto,
  CreateWorkflowParamsDto,
  CropV1Request,
  CropV1Response,
  CutV1Request,
  CutV1Response,
  DeleteParamsDto,
  DeleteStorageParamsDto,
  DetachAccessControllerParamsDto,
  EchoV1Request,
  EchoV1Response,
  EditFluxKontextDevV1Request,
  EditFluxKontextDevV1Response,
  GetAccountParamsDto,
  GetBalanceParamsDto,
  GetCollectionParamsDto,
  GetGroupParamsDto,
  GetImageParamsDto,
  GetImageRepresentationParamsDto,
  GetOperationParamsDto,
  GetOperationsParamsDto,
  GetPoseParamsDto,
  GetStackParamsDto,
  GetStorageRecordParamsDto,
  GetUrlsForImagesParamsDto,
  GetVideoParamsDto,
  GetVideosParamsDto,
  GptV1Request,
  GptV1Response,
  GptV2Request,
  GptV2Response,
  GrantAccessControllerParams,
  GroupEntity,
  HauteLindaV1Request,
  HauteLindaV1Response,
  HauteNaomiV1Request,
  HauteNaomiV1Response,
  ImageEntity,
  ImageRepresentationResponseDto,
  ImageUrlResponseDto,
  ImagineKateV1Request,
  ImagineKateV1Response,
  InitializeImageUploadResultDto,
  InpaintKateV1Request,
  InpaintKateV1Response,
  ListAccessControllerDto,
  ListAccountsDto,
  ListAccountsParamsDto,
  ListCollectionItemsDto,
  ListCollectionItemsParamsDto,
  ListCollectionsDto,
  ListCollectionsParamsDto,
  ListOperationsDto,
  ListOperationsParamsDto,
  ListPipelinesDto,
  ListPosesDto,
  ListPosesParamsDto,
  ListStacksDto,
  ListStacksParamsDto,
  ListWorkflowsDto,
  MathV1Request,
  MathV1Response,
  ModifyAccessParamsDto,
  NegateImageV1Request,
  NegateImageV1Response,
  NoiseV1Request,
  NoiseV1Response,
  ObjectDetectionV1Request,
  ObjectDetectionV1Response,
  OnecompilerV1Request,
  OnecompilerV1Response,
  OperationEntity,
  OperationsControllerListOperationsV1Params,
  PipelineDto,
  PipelineMapV1Request,
  PipelineMapV1Response,
  PipelinesControllerListPipelinesV1Params,
  PoseEntity,
  PoseEstimationV1Request,
  PoseEstimationV1Response,
  PosesControllerListPosesV1Params,
  RemoveAccountFromGroupControllerParamsDto,
  RemoveAccountFromGroupParamsDto,
  RemoveItemsFromCollectionControllerParamsDto,
  RemoveItemsFromCollectionParamsDto,
  RemoveItemsFromStackParamsDto,
  ResizeV1Request,
  ResizeV1Response,
  ResourceEntity,
  RevokeAccessControllerParamsDto,
  RunWorkflowParamsDto,
  RunWorkflowResponseDto,
  SegmentAnythingEmbeddingsV1Request,
  SegmentAnythingEmbeddingsV1Response,
  SegmentAnythingMaskV1Request,
  SegmentAnythingMaskV1Response,
  SelfAccountDto,
  SetPosePreviewControllerParamsDto,
  SetPosePreviewDto,
  StackEntity,
  StacksControllerListStacksV1Params,
  StorageEntity,
  StorageRecordsResultDto,
  StringsTemplateV1Request,
  StringsTemplateV1Response,
  TranslateV1Request,
  TranslateV1Response,
  UpdateAccountParamsDto,
  UpdateMetadataDto,
  UpdateResourceMetadataDto,
  UpdateStorageRecordParamsDto,
  UpdateWorkflowParamsDto,
  UpscaleV1Request,
  UpscaleV1Response,
  VideoEntity,
  VideoUrlResponseDto,
  VideosControllerGetVideosV1Params,
  VtonGiseleV1Request,
  VtonGiseleV1Response,
  WaitOperationParamsDto,
  WorkflowDto,
  WorkflowsControllerListWorkflowsV1Params
} from './schemas';

import { axiosMutator } from '../api-utils';
type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getHautechAPI = () => {
const accountsControllerCreateAccountV1 = (
    createAccountParamsDto: CreateAccountParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/accounts`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createAccountParamsDto
    },
      options);
    }
  
const accountsControllerListAccountsV1 = (
    params?: AccountsControllerListAccountsV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListAccountsDto>(
      {url: `/v1/accounts`, method: 'GET',
        params
    },
      options);
    }
  
const accountsControllerGetSelfV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SelfAccountDto>(
      {url: `/v1/accounts/self`, method: 'GET'
    },
      options);
    }
  
const accountsControllerGetAccountV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/accounts/${id}`, method: 'GET'
    },
      options);
    }
  
const accountsControllerUpdateAccountV1 = (
    id: string,
    updateAccountParamsDto: UpdateAccountParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/accounts/${id}`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateAccountParamsDto
    },
      options);
    }
  
const accountsControllerGetAccountByAliasV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/accounts/alias/${id}`, method: 'GET'
    },
      options);
    }
  
const balancesControllerAddBalanceV1 = (
    id: string,
    addBalanceControllerParamsDto: AddBalanceControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/accounts/${id}/balance`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: addBalanceControllerParamsDto
    },
      options);
    }
  
const balancesControllerGetBalanceV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<BalanceResultDto>(
      {url: `/v1/accounts/${id}/balance`, method: 'GET'
    },
      options);
    }
  
const balancesControllerGetBalanceForSelfV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<BalanceResultDto>(
      {url: `/v1/accounts/self/balance`, method: 'GET'
    },
      options);
    }
  
const collectionsControllerCreateCollectionV1 = (
    createCollectionParamsDto: CreateCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/collections`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createCollectionParamsDto
    },
      options);
    }
  
const collectionsControllerListCollectionsV1 = (
    params?: CollectionsControllerListCollectionsV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListCollectionsDto>(
      {url: `/v1/collections`, method: 'GET',
        params
    },
      options);
    }
  
const collectionsControllerGetCollectionV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/collections/${id}`, method: 'GET'
    },
      options);
    }
  
const collectionsControllerUpdateMetadataV1 = (
    id: string,
    updateMetadataDto: UpdateMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResourceEntity>(
      {url: `/v1/collections/${id}/metadata`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateMetadataDto
    },
      options);
    }
  
const collectionsControllerAddItemsV1 = (
    id: string,
    addItemsToCollectionControllerParamsDto: AddItemsToCollectionControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/collections/${id}/items/add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addItemsToCollectionControllerParamsDto
    },
      options);
    }
  
const collectionsControllerListItemsV1 = (
    id: string,
    params?: CollectionsControllerListItemsV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListCollectionItemsDto>(
      {url: `/v1/collections/${id}/items`, method: 'GET',
        params
    },
      options);
    }
  
const collectionsControllerRemoveItemsV1 = (
    id: string,
    removeItemsFromCollectionControllerParamsDto: RemoveItemsFromCollectionControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/collections/${id}/items/remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeItemsFromCollectionControllerParamsDto
    },
      options);
    }
  
const groupsControllerCreateGroupV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GroupEntity>(
      {url: `/v1/groups`, method: 'POST'
    },
      options);
    }
  
const groupsControllerGetGroupV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GroupEntity>(
      {url: `/v1/groups/${id}`, method: 'GET'
    },
      options);
    }
  
const groupsControllerDeleteGroupV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/groups/${id}`, method: 'DELETE'
    },
      options);
    }
  
const groupsControllerAddAccountV1 = (
    id: string,
    addAccountToGroupControllerParamsDto: AddAccountToGroupControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/groups/${id}/accounts/add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addAccountToGroupControllerParamsDto
    },
      options);
    }
  
const groupsControllerRemoveAccountV1 = (
    id: string,
    removeAccountFromGroupControllerParamsDto: RemoveAccountFromGroupControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/groups/${id}/accounts/remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeAccountFromGroupControllerParamsDto
    },
      options);
    }
  
const imagesControllerStartUploadV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<InitializeImageUploadResultDto>(
      {url: `/v1/images/upload/initialize`, method: 'POST'
    },
      options);
    }
  
const imagesControllerFinalizeUploadV1 = (
    createImageParamsDto: CreateImageParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageEntity>(
      {url: `/v1/images/upload/finalize`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createImageParamsDto
    },
      options);
    }
  
const imagesControllerGetUrlsV1 = (
    getUrlsForImagesParamsDto: GetUrlsForImagesParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageEntity[]>(
      {url: `/v1/images/many`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getUrlsForImagesParamsDto
    },
      options);
    }
  
const imagesControllerGetImageV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageEntity>(
      {url: `/v1/images/${id}`, method: 'GET'
    },
      options);
    }
  
const imagesControllerGetRepresentationV1 = (
    id: string,
    type: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageRepresentationResponseDto>(
      {url: `/v1/images/${id}/representation/${type}`, method: 'GET'
    },
      options);
    }
  
const videosControllerStartUploadV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<InitializeImageUploadResultDto>(
      {url: `/v1/videos/upload/initialize`, method: 'POST'
    },
      options);
    }
  
const videosControllerFinalizeUploadV1 = (
    createVideoParamsDto: CreateVideoParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VideoEntity>(
      {url: `/v1/videos/upload/finalize`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createVideoParamsDto
    },
      options);
    }
  
const videosControllerGetVideosV1 = (
    params: VideosControllerGetVideosV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VideoEntity[]>(
      {url: `/v1/videos/many`, method: 'GET',
        params
    },
      options);
    }
  
const videosControllerGetVideoByIdV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VideoEntity>(
      {url: `/v1/videos/${id}`, method: 'GET'
    },
      options);
    }
  
const operationsControllerGetOperationV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity>(
      {url: `/v1/operations/${id}`, method: 'GET'
    },
      options);
    }
  
const operationsControllerGetOperationsV1 = (
    getOperationsParamsDto: GetOperationsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity[]>(
      {url: `/v1/operations/many`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getOperationsParamsDto
    },
      options);
    }
  
const operationsControllerListOperationsV1 = (
    params?: OperationsControllerListOperationsV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListOperationsDto>(
      {url: `/v1/operations`, method: 'GET',
        params
    },
      options);
    }
  
const operationsControllerUpdateMetadataV1 = (
    id: string,
    updateMetadataDto: UpdateMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResourceEntity>(
      {url: `/v1/operations/${id}/metadata`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateMetadataDto
    },
      options);
    }
  
const posesControllerGetPoseV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PoseEntity>(
      {url: `/v1/poses/${id}`, method: 'GET'
    },
      options);
    }
  
const posesControllerListPosesV1 = (
    params?: PosesControllerListPosesV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListPosesDto>(
      {url: `/v1/poses`, method: 'GET',
        params
    },
      options);
    }
  
const posesControllerSetPosePreviewV1 = (
    id: string,
    setPosePreviewControllerParamsDto: SetPosePreviewControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/poses/${id}/preview`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: setPosePreviewControllerParamsDto
    },
      options);
    }
  
const posesControllerUpdateMetadataV1 = (
    id: string,
    updateMetadataDto: UpdateMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResourceEntity>(
      {url: `/v1/poses/${id}/metadata`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateMetadataDto
    },
      options);
    }
  
const stacksControllerCreateStackV1 = (
    createStackParamsDto: CreateStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/stacks`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createStackParamsDto
    },
      options);
    }
  
const stacksControllerListStacksV1 = (
    params?: StacksControllerListStacksV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListStacksDto>(
      {url: `/v1/stacks`, method: 'GET',
        params
    },
      options);
    }
  
const stacksControllerGetStackV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/stacks/${id}`, method: 'GET'
    },
      options);
    }
  
const stacksControllerUpdateMetadataV1 = (
    id: string,
    updateMetadataDto: UpdateMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResourceEntity>(
      {url: `/v1/stacks/${id}/metadata`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateMetadataDto
    },
      options);
    }
  
const stacksControllerAddItemsV1 = (
    id: string,
    addItemsToStackControllerParamsDto: AddItemsToStackControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/stacks/${id}/items/add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addItemsToStackControllerParamsDto
    },
      options);
    }
  
const stacksControllerRemoveItemsV1 = (
    id: string,
    removeItemsFromCollectionControllerParamsDto: RemoveItemsFromCollectionControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/stacks/${id}/items/remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeItemsFromCollectionControllerParamsDto
    },
      options);
    }
  
const storageControllerCreateRecordV1 = (
    createStorageRecordParamsDto: CreateStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageEntity>(
      {url: `/v1/storage`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createStorageRecordParamsDto
    },
      options);
    }
  
const storageControllerGetRecordsV1 = (
    getStorageRecordParamsDto: GetStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageRecordsResultDto[]>(
      {url: `/v1/storage/many`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getStorageRecordParamsDto
    },
      options);
    }
  
const storageControllerDeleteRecordV1 = (
    deleteStorageParamsDto: DeleteStorageParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/storage/delete`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: deleteStorageParamsDto
    },
      options);
    }
  
const storageControllerUpdateRecordV1 = (
    updateStorageRecordParamsDto: UpdateStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageEntity>(
      {url: `/v1/storage/write`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateStorageRecordParamsDto
    },
      options);
    }
  
const websocketControllerRegisterWebsocketV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/websocket/auth`, method: 'POST'
    },
      options);
    }
  
const websocketControllerGetSettingsV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/websocket/settings`, method: 'GET'
    },
      options);
    }
  
const pipelinesControllerCreatePipelineV1 = (
    createPipelineParamsDto: CreatePipelineParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PipelineDto>(
      {url: `/v1/pipelines`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createPipelineParamsDto
    },
      options);
    }
  
const pipelinesControllerListPipelinesV1 = (
    params?: PipelinesControllerListPipelinesV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListPipelinesDto>(
      {url: `/v1/pipelines`, method: 'GET',
        params
    },
      options);
    }
  
const pipelinesControllerGetPipelineV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PipelineDto>(
      {url: `/v1/pipelines/${id}`, method: 'GET'
    },
      options);
    }
  
const permissionsControllerListAvailablePermissionsV1 = (
    
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<string[]>(
      {url: `/v1/permissions/available`, method: 'GET'
    },
      options);
    }
  
const accessControllerGrantAccessV1 = (
    id: string,
    grantAccessControllerParams: GrantAccessControllerParams,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/resources/${id}/access/grant`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: grantAccessControllerParams
    },
      options);
    }
  
const accessControllerRevokeAccessV1 = (
    id: string,
    revokeAccessControllerParamsDto: RevokeAccessControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/resources/${id}/access/revoke`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: revokeAccessControllerParamsDto
    },
      options);
    }
  
const accessControllerAttachAccessV1 = (
    id: string,
    attachAccessControllerParamsDto: AttachAccessControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/resources/${id}/access/attach`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: attachAccessControllerParamsDto
    },
      options);
    }
  
const accessControllerDetachAccessV1 = (
    id: string,
    detachAccessControllerParamsDto: DetachAccessControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/resources/${id}/access/detach`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: detachAccessControllerParamsDto
    },
      options);
    }
  
/**
 * @summary UNSTABLE
 */
const accessControllerAccessV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListAccessControllerDto>(
      {url: `/v1/resources/${id}/access`, method: 'GET'
    },
      options);
    }
  
const workflowsControllerRunWorkflowV1 = (
    workflowId: string,
    runWorkflowParamsDto: RunWorkflowParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<RunWorkflowResponseDto>(
      {url: `/v1/workflows/run/${workflowId}`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: runWorkflowParamsDto
    },
      options);
    }
  
const workflowsControllerCreateWorkflowV1 = (
    createWorkflowParamsDto: CreateWorkflowParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<WorkflowDto>(
      {url: `/v1/workflows`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createWorkflowParamsDto
    },
      options);
    }
  
const workflowsControllerListWorkflowsV1 = (
    params?: WorkflowsControllerListWorkflowsV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListWorkflowsDto>(
      {url: `/v1/workflows`, method: 'GET',
        params
    },
      options);
    }
  
const workflowsControllerGetWorkflowV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<WorkflowDto>(
      {url: `/v1/workflows/${id}`, method: 'GET'
    },
      options);
    }
  
const workflowsControllerUpdateWorkflowV1 = (
    id: string,
    updateWorkflowParamsDto: UpdateWorkflowParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<WorkflowDto>(
      {url: `/v1/workflows/${id}`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateWorkflowParamsDto
    },
      options);
    }
  
const workflowsControllerDeleteWorkflowV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/workflows/${id}`, method: 'DELETE'
    },
      options);
    }
  
const operationsControllerRunHauteLindaV1V1 = (
    hauteLindaV1Request: HauteLindaV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<HauteLindaV1Response>(
      {url: `/v1/operations/run/haute.linda.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hauteLindaV1Request
    },
      options);
    }
  
const operationsControllerRunHauteNaomiV1V1 = (
    hauteNaomiV1Request: HauteNaomiV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<HauteNaomiV1Response>(
      {url: `/v1/operations/run/haute.naomi.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hauteNaomiV1Request
    },
      options);
    }
  
const operationsControllerRunInpaintKateV1V1 = (
    inpaintKateV1Request: InpaintKateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<InpaintKateV1Response>(
      {url: `/v1/operations/run/inpaint.kate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: inpaintKateV1Request
    },
      options);
    }
  
const operationsControllerRunGptV1V1 = (
    gptV1Request: GptV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GptV1Response>(
      {url: `/v1/operations/run/gpt.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: gptV1Request
    },
      options);
    }
  
const operationsControllerRunGptV2V1 = (
    gptV2Request: GptV2Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GptV2Response>(
      {url: `/v1/operations/run/gpt.v2`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: gptV2Request
    },
      options);
    }
  
const operationsControllerRunTranslateV1V1 = (
    translateV1Request: TranslateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<TranslateV1Response>(
      {url: `/v1/operations/run/translate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: translateV1Request
    },
      options);
    }
  
const operationsControllerRunStringsTemplateV1V1 = (
    stringsTemplateV1Request: StringsTemplateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StringsTemplateV1Response>(
      {url: `/v1/operations/run/strings.template.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: stringsTemplateV1Request
    },
      options);
    }
  
const operationsControllerRunImagineKateV1V1 = (
    imagineKateV1Request: ImagineKateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImagineKateV1Response>(
      {url: `/v1/operations/run/imagine.kate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: imagineKateV1Request
    },
      options);
    }
  
const operationsControllerRunUpscaleV1V1 = (
    upscaleV1Request: UpscaleV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<UpscaleV1Response>(
      {url: `/v1/operations/run/upscale.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: upscaleV1Request
    },
      options);
    }
  
const operationsControllerRunObjectDetectionV1V1 = (
    objectDetectionV1Request: ObjectDetectionV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ObjectDetectionV1Response>(
      {url: `/v1/operations/run/objectDetection.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: objectDetectionV1Request
    },
      options);
    }
  
const operationsControllerRunSegmentAnythingEmbeddingsV1V1 = (
    segmentAnythingEmbeddingsV1Request: SegmentAnythingEmbeddingsV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SegmentAnythingEmbeddingsV1Response>(
      {url: `/v1/operations/run/segmentAnything.embeddings.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: segmentAnythingEmbeddingsV1Request
    },
      options);
    }
  
const operationsControllerRunSegmentAnythingMaskV1V1 = (
    segmentAnythingMaskV1Request: SegmentAnythingMaskV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SegmentAnythingMaskV1Response>(
      {url: `/v1/operations/run/segmentAnything.mask.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: segmentAnythingMaskV1Request
    },
      options);
    }
  
const operationsControllerRunPoseEstimationV1V1 = (
    poseEstimationV1Request: PoseEstimationV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PoseEstimationV1Response>(
      {url: `/v1/operations/run/poseEstimation.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: poseEstimationV1Request
    },
      options);
    }
  
const operationsControllerRunCutV1V1 = (
    cutV1Request: CutV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CutV1Response>(
      {url: `/v1/operations/run/cut.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: cutV1Request
    },
      options);
    }
  
const operationsControllerRunCropV1V1 = (
    cropV1Request: CropV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CropV1Response>(
      {url: `/v1/operations/run/crop.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: cropV1Request
    },
      options);
    }
  
const operationsControllerRunNoiseV1V1 = (
    noiseV1Request: NoiseV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<NoiseV1Response>(
      {url: `/v1/operations/run/noise.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: noiseV1Request
    },
      options);
    }
  
const operationsControllerRunResizeV1V1 = (
    resizeV1Request: ResizeV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResizeV1Response>(
      {url: `/v1/operations/run/resize.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: resizeV1Request
    },
      options);
    }
  
const operationsControllerRunContrastV1V1 = (
    contrastV1Request: ContrastV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ContrastV1Response>(
      {url: `/v1/operations/run/contrast.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: contrastV1Request
    },
      options);
    }
  
const operationsControllerRunCompositeV1V1 = (
    compositeV1Request: CompositeV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CompositeV1Response>(
      {url: `/v1/operations/run/composite.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: compositeV1Request
    },
      options);
    }
  
const operationsControllerRunVtonGiseleV1V1 = (
    vtonGiseleV1Request: VtonGiseleV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VtonGiseleV1Response>(
      {url: `/v1/operations/run/vton.gisele.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: vtonGiseleV1Request
    },
      options);
    }
  
const operationsControllerRunNegateImageV1V1 = (
    negateImageV1Request: NegateImageV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<NegateImageV1Response>(
      {url: `/v1/operations/run/negateImage.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: negateImageV1Request
    },
      options);
    }
  
const operationsControllerRunEchoV1V1 = (
    echoV1Request: EchoV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<EchoV1Response>(
      {url: `/v1/operations/run/echo.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: echoV1Request
    },
      options);
    }
  
const operationsControllerRunMathV1V1 = (
    mathV1Request: MathV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<MathV1Response>(
      {url: `/v1/operations/run/math.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: mathV1Request
    },
      options);
    }
  
const operationsControllerRunAnimateKling16ProV1V1 = (
    animateKling16ProV1Request: AnimateKling16ProV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateKling16ProV1Response>(
      {url: `/v1/operations/run/animate.kling_1_6_pro.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateKling16ProV1Request
    },
      options);
    }
  
const operationsControllerRunAnimateKling21V1V1 = (
    animateKling21V1Request: AnimateKling21V1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateKling21V1Response>(
      {url: `/v1/operations/run/animate.kling_2_1.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateKling21V1Request
    },
      options);
    }
  
const operationsControllerRunAnimateCreatomateV1V1 = (
    animateCreatomateV1Request: AnimateCreatomateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateCreatomateV1Response>(
      {url: `/v1/operations/run/animate.creatomate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateCreatomateV1Request
    },
      options);
    }
  
const operationsControllerRunOnecompilerV1V1 = (
    onecompilerV1Request: OnecompilerV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OnecompilerV1Response>(
      {url: `/v1/operations/run/onecompiler.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: onecompilerV1Request
    },
      options);
    }
  
const operationsControllerRunEditFluxKontextDevV1V1 = (
    editFluxKontextDevV1Request: EditFluxKontextDevV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<EditFluxKontextDevV1Response>(
      {url: `/v1/operations/run/edit.flux_kontext_dev.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: editFluxKontextDevV1Request
    },
      options);
    }
  
const operationsControllerRunPipelineMapV1V1 = (
    pipelineMapV1Request: PipelineMapV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PipelineMapV1Response>(
      {url: `/v1/operations/run/pipelineMap.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: pipelineMapV1Request
    },
      options);
    }
  
const callControllerCallAccessGrantV1 = (
    modifyAccessParamsDto: ModifyAccessParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/access.grant`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: modifyAccessParamsDto
    },
      options);
    }
  
const callControllerCallAccessAttachV1 = (
    attachAccessParamsDto: AttachAccessParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/access.attach`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: attachAccessParamsDto
    },
      options);
    }
  
const callControllerCallAccountsCreateV1 = (
    createAccountParamsDto: CreateAccountParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/call/accounts.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createAccountParamsDto
    },
      options);
    }
  
const callControllerCallAccountsGetV1 = (
    getAccountParamsDto: GetAccountParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AccountEntity>(
      {url: `/v1/call/accounts.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getAccountParamsDto
    },
      options);
    }
  
const callControllerCallAccountsSelfV1 = (
    callControllerCallAccountsSelfV1Body: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SelfAccountDto>(
      {url: `/v1/call/accounts.self`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: callControllerCallAccountsSelfV1Body
    },
      options);
    }
  
const callControllerCallAccountsListV1 = (
    listAccountsParamsDto: ListAccountsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListAccountsDto>(
      {url: `/v1/call/accounts.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listAccountsParamsDto
    },
      options);
    }
  
const callControllerCallAccountsBalanceAddV1 = (
    addBalanceParamsDto: AddBalanceParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/accounts.balance.add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addBalanceParamsDto
    },
      options);
    }
  
const callControllerCallAccountsBalanceSelfV1 = (
    callControllerCallAccountsBalanceSelfV1Body: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<BalanceResultDto>(
      {url: `/v1/call/accounts.balance.self`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: callControllerCallAccountsBalanceSelfV1Body
    },
      options);
    }
  
const callControllerCallAccountsBalanceGetV1 = (
    getBalanceParamsDto: GetBalanceParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<BalanceResultDto>(
      {url: `/v1/call/accounts.balance.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getBalanceParamsDto
    },
      options);
    }
  
const callControllerCallCollectionsCreateV1 = (
    createCollectionParamsDto: CreateCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/call/collections.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createCollectionParamsDto
    },
      options);
    }
  
const callControllerCallCollectionsGetV1 = (
    getCollectionParamsDto: GetCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/call/collections.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getCollectionParamsDto
    },
      options);
    }
  
const callControllerCallCollectionsListV1 = (
    listCollectionsParamsDto: ListCollectionsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListCollectionsDto>(
      {url: `/v1/call/collections.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listCollectionsParamsDto
    },
      options);
    }
  
const callControllerCallCollectionsMetadataUpdateV1 = (
    updateResourceMetadataDto: UpdateResourceMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CollectionEntity>(
      {url: `/v1/call/collections.metadata.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateResourceMetadataDto
    },
      options);
    }
  
const callControllerCallCollectionsItemsAddV1 = (
    addItemsToCollectionParamsDto: AddItemsToCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/collections.items.add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addItemsToCollectionParamsDto
    },
      options);
    }
  
const callControllerCallCollectionsItemsListV1 = (
    listCollectionItemsParamsDto: ListCollectionItemsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListCollectionItemsDto>(
      {url: `/v1/call/collections.items.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listCollectionItemsParamsDto
    },
      options);
    }
  
const callControllerCallCollectionsItemsRemoveV1 = (
    removeItemsFromCollectionParamsDto: RemoveItemsFromCollectionParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/collections.items.remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeItemsFromCollectionParamsDto
    },
      options);
    }
  
const callControllerCallGroupsCreateV1 = (
    callControllerCallGroupsCreateV1Body: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GroupEntity>(
      {url: `/v1/call/groups.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: callControllerCallGroupsCreateV1Body
    },
      options);
    }
  
const callControllerCallGroupsGetV1 = (
    getGroupParamsDto: GetGroupParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GroupEntity>(
      {url: `/v1/call/groups.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getGroupParamsDto
    },
      options);
    }
  
const callControllerCallGroupsDeleteV1 = (
    deleteParamsDto: DeleteParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/groups.delete`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: deleteParamsDto
    },
      options);
    }
  
const callControllerCallGroupsAccountsAddV1 = (
    addAccountToGroupParamsDto: AddAccountToGroupParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/groups.accounts.add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addAccountToGroupParamsDto
    },
      options);
    }
  
const callControllerCallGroupsAccountsRemoveV1 = (
    removeAccountFromGroupParamsDto: RemoveAccountFromGroupParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/groups.accounts.remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeAccountFromGroupParamsDto
    },
      options);
    }
  
const callControllerCallImagesGetManyV1 = (
    getUrlsForImagesParamsDto: GetUrlsForImagesParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageUrlResponseDto[]>(
      {url: `/v1/call/images.getMany`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getUrlsForImagesParamsDto
    },
      options);
    }
  
const callControllerCallImagesGetV1 = (
    getImageParamsDto: GetImageParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageEntity>(
      {url: `/v1/call/images.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getImageParamsDto
    },
      options);
    }
  
const callControllerCallImagesRepresentationsGetV1 = (
    getImageRepresentationParamsDto: GetImageRepresentationParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImageRepresentationResponseDto>(
      {url: `/v1/call/images.representations.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getImageRepresentationParamsDto
    },
      options);
    }
  
const callControllerCallVideosGetManyV1 = (
    getVideosParamsDto: GetVideosParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VideoUrlResponseDto[]>(
      {url: `/v1/call/videos.getMany`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getVideosParamsDto
    },
      options);
    }
  
const callControllerCallVideosGetV1 = (
    getVideoParamsDto: GetVideoParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VideoEntity>(
      {url: `/v1/call/videos.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getVideoParamsDto
    },
      options);
    }
  
const callControllerCallOperationsGetV1 = (
    getOperationParamsDto: GetOperationParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity>(
      {url: `/v1/call/operations.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getOperationParamsDto
    },
      options);
    }
  
const callControllerCallOperationsGetManyV1 = (
    getOperationsParamsDto: GetOperationsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity[]>(
      {url: `/v1/call/operations.getMany`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getOperationsParamsDto
    },
      options);
    }
  
const callControllerCallOperationsListV1 = (
    listOperationsParamsDto: ListOperationsParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListOperationsDto>(
      {url: `/v1/call/operations.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listOperationsParamsDto
    },
      options);
    }
  
const callControllerCallOperationsMetadataUpdateV1 = (
    updateResourceMetadataDto: UpdateResourceMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity>(
      {url: `/v1/call/operations.metadata.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateResourceMetadataDto
    },
      options);
    }
  
const callControllerCallOperationsWaitV1 = (
    waitOperationParamsDto: WaitOperationParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OperationEntity>(
      {url: `/v1/call/operations.wait`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: waitOperationParamsDto
    },
      options);
    }
  
const callControllerCallOperationsRunHauteLindaV1V1 = (
    hauteLindaV1Request: HauteLindaV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<HauteLindaV1Response>(
      {url: `/v1/call/operations.run.haute.linda.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hauteLindaV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunHauteNaomiV1V1 = (
    hauteNaomiV1Request: HauteNaomiV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<HauteNaomiV1Response>(
      {url: `/v1/call/operations.run.haute.naomi.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hauteNaomiV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunInpaintKateV1V1 = (
    inpaintKateV1Request: InpaintKateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<InpaintKateV1Response>(
      {url: `/v1/call/operations.run.inpaint.kate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: inpaintKateV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunGptV1V1 = (
    gptV1Request: GptV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GptV1Response>(
      {url: `/v1/call/operations.run.gpt.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: gptV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunGptV2V1 = (
    gptV2Request: GptV2Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<GptV2Response>(
      {url: `/v1/call/operations.run.gpt.v2`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: gptV2Request
    },
      options);
    }
  
const callControllerCallOperationsRunTranslateV1V1 = (
    translateV1Request: TranslateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<TranslateV1Response>(
      {url: `/v1/call/operations.run.translate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: translateV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunStringsTemplateV1V1 = (
    stringsTemplateV1Request: StringsTemplateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StringsTemplateV1Response>(
      {url: `/v1/call/operations.run.strings.template.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: stringsTemplateV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunImagineKateV1V1 = (
    imagineKateV1Request: ImagineKateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ImagineKateV1Response>(
      {url: `/v1/call/operations.run.imagine.kate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: imagineKateV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunUpscaleV1V1 = (
    upscaleV1Request: UpscaleV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<UpscaleV1Response>(
      {url: `/v1/call/operations.run.upscale.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: upscaleV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunObjectDetectionV1V1 = (
    objectDetectionV1Request: ObjectDetectionV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ObjectDetectionV1Response>(
      {url: `/v1/call/operations.run.objectDetection.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: objectDetectionV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunSegmentAnythingEmbeddingsV1V1 = (
    segmentAnythingEmbeddingsV1Request: SegmentAnythingEmbeddingsV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SegmentAnythingEmbeddingsV1Response>(
      {url: `/v1/call/operations.run.segmentAnything.embeddings.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: segmentAnythingEmbeddingsV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunSegmentAnythingMaskV1V1 = (
    segmentAnythingMaskV1Request: SegmentAnythingMaskV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<SegmentAnythingMaskV1Response>(
      {url: `/v1/call/operations.run.segmentAnything.mask.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: segmentAnythingMaskV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunPoseEstimationV1V1 = (
    poseEstimationV1Request: PoseEstimationV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PoseEstimationV1Response>(
      {url: `/v1/call/operations.run.poseEstimation.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: poseEstimationV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunCutV1V1 = (
    cutV1Request: CutV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CutV1Response>(
      {url: `/v1/call/operations.run.cut.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: cutV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunCropV1V1 = (
    cropV1Request: CropV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CropV1Response>(
      {url: `/v1/call/operations.run.crop.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: cropV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunNoiseV1V1 = (
    noiseV1Request: NoiseV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<NoiseV1Response>(
      {url: `/v1/call/operations.run.noise.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: noiseV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunResizeV1V1 = (
    resizeV1Request: ResizeV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResizeV1Response>(
      {url: `/v1/call/operations.run.resize.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: resizeV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunContrastV1V1 = (
    contrastV1Request: ContrastV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ContrastV1Response>(
      {url: `/v1/call/operations.run.contrast.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: contrastV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunCompositeV1V1 = (
    compositeV1Request: CompositeV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<CompositeV1Response>(
      {url: `/v1/call/operations.run.composite.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: compositeV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunVtonGiseleV1V1 = (
    vtonGiseleV1Request: VtonGiseleV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<VtonGiseleV1Response>(
      {url: `/v1/call/operations.run.vton.gisele.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: vtonGiseleV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunNegateImageV1V1 = (
    negateImageV1Request: NegateImageV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<NegateImageV1Response>(
      {url: `/v1/call/operations.run.negateImage.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: negateImageV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunEchoV1V1 = (
    echoV1Request: EchoV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<EchoV1Response>(
      {url: `/v1/call/operations.run.echo.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: echoV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunMathV1V1 = (
    mathV1Request: MathV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<MathV1Response>(
      {url: `/v1/call/operations.run.math.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: mathV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunAnimateKling16ProV1V1 = (
    animateKling16ProV1Request: AnimateKling16ProV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateKling16ProV1Response>(
      {url: `/v1/call/operations.run.animate.kling_1_6_pro.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateKling16ProV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunAnimateKling21V1V1 = (
    animateKling21V1Request: AnimateKling21V1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateKling21V1Response>(
      {url: `/v1/call/operations.run.animate.kling_2_1.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateKling21V1Request
    },
      options);
    }
  
const callControllerCallOperationsRunAnimateCreatomateV1V1 = (
    animateCreatomateV1Request: AnimateCreatomateV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<AnimateCreatomateV1Response>(
      {url: `/v1/call/operations.run.animate.creatomate.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animateCreatomateV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunOnecompilerV1V1 = (
    onecompilerV1Request: OnecompilerV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<OnecompilerV1Response>(
      {url: `/v1/call/operations.run.onecompiler.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: onecompilerV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunEditFluxKontextDevV1V1 = (
    editFluxKontextDevV1Request: EditFluxKontextDevV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<EditFluxKontextDevV1Response>(
      {url: `/v1/call/operations.run.edit.flux_kontext_dev.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: editFluxKontextDevV1Request
    },
      options);
    }
  
const callControllerCallOperationsRunPipelineMapV1V1 = (
    pipelineMapV1Request: PipelineMapV1Request,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PipelineMapV1Response>(
      {url: `/v1/call/operations.run.pipelineMap.v1`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: pipelineMapV1Request
    },
      options);
    }
  
const callControllerCallPosesGetV1 = (
    getPoseParamsDto: GetPoseParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<PoseEntity>(
      {url: `/v1/call/poses.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getPoseParamsDto
    },
      options);
    }
  
const callControllerCallPosesListV1 = (
    listPosesParamsDto: ListPosesParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListPosesDto>(
      {url: `/v1/call/poses.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listPosesParamsDto
    },
      options);
    }
  
const callControllerCallPosesPreviewSetV1 = (
    setPosePreviewDto: SetPosePreviewDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/poses.preview.set`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: setPosePreviewDto
    },
      options);
    }
  
const callControllerCallPosesMetadataUpdateV1 = (
    updateResourceMetadataDto: UpdateResourceMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/poses.metadata.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateResourceMetadataDto
    },
      options);
    }
  
const callControllerCallStacksCreateV1 = (
    createStackParamsDto: CreateStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createStackParamsDto
    },
      options);
    }
  
const callControllerCallStacksGetV1 = (
    getStackParamsDto: GetStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.get`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getStackParamsDto
    },
      options);
    }
  
const callControllerCallStacksListV1 = (
    listStacksParamsDto: ListStacksParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListStacksDto>(
      {url: `/v1/call/stacks.list`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: listStacksParamsDto
    },
      options);
    }
  
const callControllerCallStacksMetadataUpdateV1 = (
    updateResourceMetadataDto: UpdateResourceMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.metadata.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateResourceMetadataDto
    },
      options);
    }
  
const callControllerCallStacksItemsAddV1 = (
    addItemsToStackParamsDto: AddItemsToStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.items.add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addItemsToStackParamsDto
    },
      options);
    }
  
const callControllerCallStacksItemsRemoveV1 = (
    removeItemsFromStackParamsDto: RemoveItemsFromStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/call/stacks.items.remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeItemsFromStackParamsDto
    },
      options);
    }
  
const callControllerCallStorageCreateV1 = (
    createStorageRecordParamsDto: CreateStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageEntity>(
      {url: `/v1/call/storage.create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createStorageRecordParamsDto
    },
      options);
    }
  
const callControllerCallStorageDeleteV1 = (
    deleteStorageParamsDto: DeleteStorageParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<void>(
      {url: `/v1/call/storage.delete`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: deleteStorageParamsDto
    },
      options);
    }
  
const callControllerCallStorageGetManyV1 = (
    getStorageRecordParamsDto: GetStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageRecordsResultDto[]>(
      {url: `/v1/call/storage.getMany`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: getStorageRecordParamsDto
    },
      options);
    }
  
const callControllerCallStorageUpdateV1 = (
    updateStorageRecordParamsDto: UpdateStorageRecordParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StorageEntity>(
      {url: `/v1/call/storage.update`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: updateStorageRecordParamsDto
    },
      options);
    }
  
return {accountsControllerCreateAccountV1,accountsControllerListAccountsV1,accountsControllerGetSelfV1,accountsControllerGetAccountV1,accountsControllerUpdateAccountV1,accountsControllerGetAccountByAliasV1,balancesControllerAddBalanceV1,balancesControllerGetBalanceV1,balancesControllerGetBalanceForSelfV1,collectionsControllerCreateCollectionV1,collectionsControllerListCollectionsV1,collectionsControllerGetCollectionV1,collectionsControllerUpdateMetadataV1,collectionsControllerAddItemsV1,collectionsControllerListItemsV1,collectionsControllerRemoveItemsV1,groupsControllerCreateGroupV1,groupsControllerGetGroupV1,groupsControllerDeleteGroupV1,groupsControllerAddAccountV1,groupsControllerRemoveAccountV1,imagesControllerStartUploadV1,imagesControllerFinalizeUploadV1,imagesControllerGetUrlsV1,imagesControllerGetImageV1,imagesControllerGetRepresentationV1,videosControllerStartUploadV1,videosControllerFinalizeUploadV1,videosControllerGetVideosV1,videosControllerGetVideoByIdV1,operationsControllerGetOperationV1,operationsControllerGetOperationsV1,operationsControllerListOperationsV1,operationsControllerUpdateMetadataV1,posesControllerGetPoseV1,posesControllerListPosesV1,posesControllerSetPosePreviewV1,posesControllerUpdateMetadataV1,stacksControllerCreateStackV1,stacksControllerListStacksV1,stacksControllerGetStackV1,stacksControllerUpdateMetadataV1,stacksControllerAddItemsV1,stacksControllerRemoveItemsV1,storageControllerCreateRecordV1,storageControllerGetRecordsV1,storageControllerDeleteRecordV1,storageControllerUpdateRecordV1,websocketControllerRegisterWebsocketV1,websocketControllerGetSettingsV1,pipelinesControllerCreatePipelineV1,pipelinesControllerListPipelinesV1,pipelinesControllerGetPipelineV1,permissionsControllerListAvailablePermissionsV1,accessControllerGrantAccessV1,accessControllerRevokeAccessV1,accessControllerAttachAccessV1,accessControllerDetachAccessV1,accessControllerAccessV1,workflowsControllerRunWorkflowV1,workflowsControllerCreateWorkflowV1,workflowsControllerListWorkflowsV1,workflowsControllerGetWorkflowV1,workflowsControllerUpdateWorkflowV1,workflowsControllerDeleteWorkflowV1,operationsControllerRunHauteLindaV1V1,operationsControllerRunHauteNaomiV1V1,operationsControllerRunInpaintKateV1V1,operationsControllerRunGptV1V1,operationsControllerRunGptV2V1,operationsControllerRunTranslateV1V1,operationsControllerRunStringsTemplateV1V1,operationsControllerRunImagineKateV1V1,operationsControllerRunUpscaleV1V1,operationsControllerRunObjectDetectionV1V1,operationsControllerRunSegmentAnythingEmbeddingsV1V1,operationsControllerRunSegmentAnythingMaskV1V1,operationsControllerRunPoseEstimationV1V1,operationsControllerRunCutV1V1,operationsControllerRunCropV1V1,operationsControllerRunNoiseV1V1,operationsControllerRunResizeV1V1,operationsControllerRunContrastV1V1,operationsControllerRunCompositeV1V1,operationsControllerRunVtonGiseleV1V1,operationsControllerRunNegateImageV1V1,operationsControllerRunEchoV1V1,operationsControllerRunMathV1V1,operationsControllerRunAnimateKling16ProV1V1,operationsControllerRunAnimateKling21V1V1,operationsControllerRunAnimateCreatomateV1V1,operationsControllerRunOnecompilerV1V1,operationsControllerRunEditFluxKontextDevV1V1,operationsControllerRunPipelineMapV1V1,callControllerCallAccessGrantV1,callControllerCallAccessAttachV1,callControllerCallAccountsCreateV1,callControllerCallAccountsGetV1,callControllerCallAccountsSelfV1,callControllerCallAccountsListV1,callControllerCallAccountsBalanceAddV1,callControllerCallAccountsBalanceSelfV1,callControllerCallAccountsBalanceGetV1,callControllerCallCollectionsCreateV1,callControllerCallCollectionsGetV1,callControllerCallCollectionsListV1,callControllerCallCollectionsMetadataUpdateV1,callControllerCallCollectionsItemsAddV1,callControllerCallCollectionsItemsListV1,callControllerCallCollectionsItemsRemoveV1,callControllerCallGroupsCreateV1,callControllerCallGroupsGetV1,callControllerCallGroupsDeleteV1,callControllerCallGroupsAccountsAddV1,callControllerCallGroupsAccountsRemoveV1,callControllerCallImagesGetManyV1,callControllerCallImagesGetV1,callControllerCallImagesRepresentationsGetV1,callControllerCallVideosGetManyV1,callControllerCallVideosGetV1,callControllerCallOperationsGetV1,callControllerCallOperationsGetManyV1,callControllerCallOperationsListV1,callControllerCallOperationsMetadataUpdateV1,callControllerCallOperationsWaitV1,callControllerCallOperationsRunHauteLindaV1V1,callControllerCallOperationsRunHauteNaomiV1V1,callControllerCallOperationsRunInpaintKateV1V1,callControllerCallOperationsRunGptV1V1,callControllerCallOperationsRunGptV2V1,callControllerCallOperationsRunTranslateV1V1,callControllerCallOperationsRunStringsTemplateV1V1,callControllerCallOperationsRunImagineKateV1V1,callControllerCallOperationsRunUpscaleV1V1,callControllerCallOperationsRunObjectDetectionV1V1,callControllerCallOperationsRunSegmentAnythingEmbeddingsV1V1,callControllerCallOperationsRunSegmentAnythingMaskV1V1,callControllerCallOperationsRunPoseEstimationV1V1,callControllerCallOperationsRunCutV1V1,callControllerCallOperationsRunCropV1V1,callControllerCallOperationsRunNoiseV1V1,callControllerCallOperationsRunResizeV1V1,callControllerCallOperationsRunContrastV1V1,callControllerCallOperationsRunCompositeV1V1,callControllerCallOperationsRunVtonGiseleV1V1,callControllerCallOperationsRunNegateImageV1V1,callControllerCallOperationsRunEchoV1V1,callControllerCallOperationsRunMathV1V1,callControllerCallOperationsRunAnimateKling16ProV1V1,callControllerCallOperationsRunAnimateKling21V1V1,callControllerCallOperationsRunAnimateCreatomateV1V1,callControllerCallOperationsRunOnecompilerV1V1,callControllerCallOperationsRunEditFluxKontextDevV1V1,callControllerCallOperationsRunPipelineMapV1V1,callControllerCallPosesGetV1,callControllerCallPosesListV1,callControllerCallPosesPreviewSetV1,callControllerCallPosesMetadataUpdateV1,callControllerCallStacksCreateV1,callControllerCallStacksGetV1,callControllerCallStacksListV1,callControllerCallStacksMetadataUpdateV1,callControllerCallStacksItemsAddV1,callControllerCallStacksItemsRemoveV1,callControllerCallStorageCreateV1,callControllerCallStorageDeleteV1,callControllerCallStorageGetManyV1,callControllerCallStorageUpdateV1}};
export type AccountsControllerCreateAccountV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accountsControllerCreateAccountV1']>>>
export type AccountsControllerListAccountsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accountsControllerListAccountsV1']>>>
export type AccountsControllerGetSelfV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accountsControllerGetSelfV1']>>>
export type AccountsControllerGetAccountV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accountsControllerGetAccountV1']>>>
export type AccountsControllerUpdateAccountV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accountsControllerUpdateAccountV1']>>>
export type AccountsControllerGetAccountByAliasV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accountsControllerGetAccountByAliasV1']>>>
export type BalancesControllerAddBalanceV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['balancesControllerAddBalanceV1']>>>
export type BalancesControllerGetBalanceV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['balancesControllerGetBalanceV1']>>>
export type BalancesControllerGetBalanceForSelfV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['balancesControllerGetBalanceForSelfV1']>>>
export type CollectionsControllerCreateCollectionV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['collectionsControllerCreateCollectionV1']>>>
export type CollectionsControllerListCollectionsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['collectionsControllerListCollectionsV1']>>>
export type CollectionsControllerGetCollectionV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['collectionsControllerGetCollectionV1']>>>
export type CollectionsControllerUpdateMetadataV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['collectionsControllerUpdateMetadataV1']>>>
export type CollectionsControllerAddItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['collectionsControllerAddItemsV1']>>>
export type CollectionsControllerListItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['collectionsControllerListItemsV1']>>>
export type CollectionsControllerRemoveItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['collectionsControllerRemoveItemsV1']>>>
export type GroupsControllerCreateGroupV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['groupsControllerCreateGroupV1']>>>
export type GroupsControllerGetGroupV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['groupsControllerGetGroupV1']>>>
export type GroupsControllerDeleteGroupV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['groupsControllerDeleteGroupV1']>>>
export type GroupsControllerAddAccountV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['groupsControllerAddAccountV1']>>>
export type GroupsControllerRemoveAccountV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['groupsControllerRemoveAccountV1']>>>
export type ImagesControllerStartUploadV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['imagesControllerStartUploadV1']>>>
export type ImagesControllerFinalizeUploadV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['imagesControllerFinalizeUploadV1']>>>
export type ImagesControllerGetUrlsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['imagesControllerGetUrlsV1']>>>
export type ImagesControllerGetImageV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['imagesControllerGetImageV1']>>>
export type ImagesControllerGetRepresentationV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['imagesControllerGetRepresentationV1']>>>
export type VideosControllerStartUploadV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['videosControllerStartUploadV1']>>>
export type VideosControllerFinalizeUploadV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['videosControllerFinalizeUploadV1']>>>
export type VideosControllerGetVideosV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['videosControllerGetVideosV1']>>>
export type VideosControllerGetVideoByIdV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['videosControllerGetVideoByIdV1']>>>
export type OperationsControllerGetOperationV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerGetOperationV1']>>>
export type OperationsControllerGetOperationsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerGetOperationsV1']>>>
export type OperationsControllerListOperationsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerListOperationsV1']>>>
export type OperationsControllerUpdateMetadataV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerUpdateMetadataV1']>>>
export type PosesControllerGetPoseV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['posesControllerGetPoseV1']>>>
export type PosesControllerListPosesV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['posesControllerListPosesV1']>>>
export type PosesControllerSetPosePreviewV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['posesControllerSetPosePreviewV1']>>>
export type PosesControllerUpdateMetadataV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['posesControllerUpdateMetadataV1']>>>
export type StacksControllerCreateStackV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['stacksControllerCreateStackV1']>>>
export type StacksControllerListStacksV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['stacksControllerListStacksV1']>>>
export type StacksControllerGetStackV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['stacksControllerGetStackV1']>>>
export type StacksControllerUpdateMetadataV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['stacksControllerUpdateMetadataV1']>>>
export type StacksControllerAddItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['stacksControllerAddItemsV1']>>>
export type StacksControllerRemoveItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['stacksControllerRemoveItemsV1']>>>
export type StorageControllerCreateRecordV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['storageControllerCreateRecordV1']>>>
export type StorageControllerGetRecordsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['storageControllerGetRecordsV1']>>>
export type StorageControllerDeleteRecordV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['storageControllerDeleteRecordV1']>>>
export type StorageControllerUpdateRecordV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['storageControllerUpdateRecordV1']>>>
export type WebsocketControllerRegisterWebsocketV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['websocketControllerRegisterWebsocketV1']>>>
export type WebsocketControllerGetSettingsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['websocketControllerGetSettingsV1']>>>
export type PipelinesControllerCreatePipelineV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['pipelinesControllerCreatePipelineV1']>>>
export type PipelinesControllerListPipelinesV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['pipelinesControllerListPipelinesV1']>>>
export type PipelinesControllerGetPipelineV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['pipelinesControllerGetPipelineV1']>>>
export type PermissionsControllerListAvailablePermissionsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['permissionsControllerListAvailablePermissionsV1']>>>
export type AccessControllerGrantAccessV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accessControllerGrantAccessV1']>>>
export type AccessControllerRevokeAccessV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accessControllerRevokeAccessV1']>>>
export type AccessControllerAttachAccessV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accessControllerAttachAccessV1']>>>
export type AccessControllerDetachAccessV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accessControllerDetachAccessV1']>>>
export type AccessControllerAccessV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['accessControllerAccessV1']>>>
export type WorkflowsControllerRunWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['workflowsControllerRunWorkflowV1']>>>
export type WorkflowsControllerCreateWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['workflowsControllerCreateWorkflowV1']>>>
export type WorkflowsControllerListWorkflowsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['workflowsControllerListWorkflowsV1']>>>
export type WorkflowsControllerGetWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['workflowsControllerGetWorkflowV1']>>>
export type WorkflowsControllerUpdateWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['workflowsControllerUpdateWorkflowV1']>>>
export type WorkflowsControllerDeleteWorkflowV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['workflowsControllerDeleteWorkflowV1']>>>
export type OperationsControllerRunHauteLindaV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunHauteLindaV1V1']>>>
export type OperationsControllerRunHauteNaomiV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunHauteNaomiV1V1']>>>
export type OperationsControllerRunInpaintKateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunInpaintKateV1V1']>>>
export type OperationsControllerRunGptV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunGptV1V1']>>>
export type OperationsControllerRunGptV2V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunGptV2V1']>>>
export type OperationsControllerRunTranslateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunTranslateV1V1']>>>
export type OperationsControllerRunStringsTemplateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunStringsTemplateV1V1']>>>
export type OperationsControllerRunImagineKateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunImagineKateV1V1']>>>
export type OperationsControllerRunUpscaleV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunUpscaleV1V1']>>>
export type OperationsControllerRunObjectDetectionV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunObjectDetectionV1V1']>>>
export type OperationsControllerRunSegmentAnythingEmbeddingsV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunSegmentAnythingEmbeddingsV1V1']>>>
export type OperationsControllerRunSegmentAnythingMaskV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunSegmentAnythingMaskV1V1']>>>
export type OperationsControllerRunPoseEstimationV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunPoseEstimationV1V1']>>>
export type OperationsControllerRunCutV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunCutV1V1']>>>
export type OperationsControllerRunCropV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunCropV1V1']>>>
export type OperationsControllerRunNoiseV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunNoiseV1V1']>>>
export type OperationsControllerRunResizeV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunResizeV1V1']>>>
export type OperationsControllerRunContrastV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunContrastV1V1']>>>
export type OperationsControllerRunCompositeV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunCompositeV1V1']>>>
export type OperationsControllerRunVtonGiseleV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunVtonGiseleV1V1']>>>
export type OperationsControllerRunNegateImageV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunNegateImageV1V1']>>>
export type OperationsControllerRunEchoV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunEchoV1V1']>>>
export type OperationsControllerRunMathV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunMathV1V1']>>>
export type OperationsControllerRunAnimateKling16ProV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunAnimateKling16ProV1V1']>>>
export type OperationsControllerRunAnimateKling21V1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunAnimateKling21V1V1']>>>
export type OperationsControllerRunAnimateCreatomateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunAnimateCreatomateV1V1']>>>
export type OperationsControllerRunOnecompilerV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunOnecompilerV1V1']>>>
export type OperationsControllerRunEditFluxKontextDevV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunEditFluxKontextDevV1V1']>>>
export type OperationsControllerRunPipelineMapV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['operationsControllerRunPipelineMapV1V1']>>>
export type CallControllerCallAccessGrantV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccessGrantV1']>>>
export type CallControllerCallAccessAttachV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccessAttachV1']>>>
export type CallControllerCallAccountsCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccountsCreateV1']>>>
export type CallControllerCallAccountsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccountsGetV1']>>>
export type CallControllerCallAccountsSelfV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccountsSelfV1']>>>
export type CallControllerCallAccountsListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccountsListV1']>>>
export type CallControllerCallAccountsBalanceAddV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccountsBalanceAddV1']>>>
export type CallControllerCallAccountsBalanceSelfV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccountsBalanceSelfV1']>>>
export type CallControllerCallAccountsBalanceGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallAccountsBalanceGetV1']>>>
export type CallControllerCallCollectionsCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallCollectionsCreateV1']>>>
export type CallControllerCallCollectionsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallCollectionsGetV1']>>>
export type CallControllerCallCollectionsListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallCollectionsListV1']>>>
export type CallControllerCallCollectionsMetadataUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallCollectionsMetadataUpdateV1']>>>
export type CallControllerCallCollectionsItemsAddV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallCollectionsItemsAddV1']>>>
export type CallControllerCallCollectionsItemsListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallCollectionsItemsListV1']>>>
export type CallControllerCallCollectionsItemsRemoveV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallCollectionsItemsRemoveV1']>>>
export type CallControllerCallGroupsCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallGroupsCreateV1']>>>
export type CallControllerCallGroupsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallGroupsGetV1']>>>
export type CallControllerCallGroupsDeleteV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallGroupsDeleteV1']>>>
export type CallControllerCallGroupsAccountsAddV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallGroupsAccountsAddV1']>>>
export type CallControllerCallGroupsAccountsRemoveV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallGroupsAccountsRemoveV1']>>>
export type CallControllerCallImagesGetManyV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallImagesGetManyV1']>>>
export type CallControllerCallImagesGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallImagesGetV1']>>>
export type CallControllerCallImagesRepresentationsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallImagesRepresentationsGetV1']>>>
export type CallControllerCallVideosGetManyV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallVideosGetManyV1']>>>
export type CallControllerCallVideosGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallVideosGetV1']>>>
export type CallControllerCallOperationsGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsGetV1']>>>
export type CallControllerCallOperationsGetManyV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsGetManyV1']>>>
export type CallControllerCallOperationsListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsListV1']>>>
export type CallControllerCallOperationsMetadataUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsMetadataUpdateV1']>>>
export type CallControllerCallOperationsWaitV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsWaitV1']>>>
export type CallControllerCallOperationsRunHauteLindaV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunHauteLindaV1V1']>>>
export type CallControllerCallOperationsRunHauteNaomiV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunHauteNaomiV1V1']>>>
export type CallControllerCallOperationsRunInpaintKateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunInpaintKateV1V1']>>>
export type CallControllerCallOperationsRunGptV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunGptV1V1']>>>
export type CallControllerCallOperationsRunGptV2V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunGptV2V1']>>>
export type CallControllerCallOperationsRunTranslateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunTranslateV1V1']>>>
export type CallControllerCallOperationsRunStringsTemplateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunStringsTemplateV1V1']>>>
export type CallControllerCallOperationsRunImagineKateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunImagineKateV1V1']>>>
export type CallControllerCallOperationsRunUpscaleV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunUpscaleV1V1']>>>
export type CallControllerCallOperationsRunObjectDetectionV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunObjectDetectionV1V1']>>>
export type CallControllerCallOperationsRunSegmentAnythingEmbeddingsV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunSegmentAnythingEmbeddingsV1V1']>>>
export type CallControllerCallOperationsRunSegmentAnythingMaskV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunSegmentAnythingMaskV1V1']>>>
export type CallControllerCallOperationsRunPoseEstimationV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunPoseEstimationV1V1']>>>
export type CallControllerCallOperationsRunCutV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunCutV1V1']>>>
export type CallControllerCallOperationsRunCropV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunCropV1V1']>>>
export type CallControllerCallOperationsRunNoiseV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunNoiseV1V1']>>>
export type CallControllerCallOperationsRunResizeV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunResizeV1V1']>>>
export type CallControllerCallOperationsRunContrastV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunContrastV1V1']>>>
export type CallControllerCallOperationsRunCompositeV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunCompositeV1V1']>>>
export type CallControllerCallOperationsRunVtonGiseleV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunVtonGiseleV1V1']>>>
export type CallControllerCallOperationsRunNegateImageV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunNegateImageV1V1']>>>
export type CallControllerCallOperationsRunEchoV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunEchoV1V1']>>>
export type CallControllerCallOperationsRunMathV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunMathV1V1']>>>
export type CallControllerCallOperationsRunAnimateKling16ProV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunAnimateKling16ProV1V1']>>>
export type CallControllerCallOperationsRunAnimateKling21V1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunAnimateKling21V1V1']>>>
export type CallControllerCallOperationsRunAnimateCreatomateV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunAnimateCreatomateV1V1']>>>
export type CallControllerCallOperationsRunOnecompilerV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunOnecompilerV1V1']>>>
export type CallControllerCallOperationsRunEditFluxKontextDevV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunEditFluxKontextDevV1V1']>>>
export type CallControllerCallOperationsRunPipelineMapV1V1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallOperationsRunPipelineMapV1V1']>>>
export type CallControllerCallPosesGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallPosesGetV1']>>>
export type CallControllerCallPosesListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallPosesListV1']>>>
export type CallControllerCallPosesPreviewSetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallPosesPreviewSetV1']>>>
export type CallControllerCallPosesMetadataUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallPosesMetadataUpdateV1']>>>
export type CallControllerCallStacksCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStacksCreateV1']>>>
export type CallControllerCallStacksGetV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStacksGetV1']>>>
export type CallControllerCallStacksListV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStacksListV1']>>>
export type CallControllerCallStacksMetadataUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStacksMetadataUpdateV1']>>>
export type CallControllerCallStacksItemsAddV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStacksItemsAddV1']>>>
export type CallControllerCallStacksItemsRemoveV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStacksItemsRemoveV1']>>>
export type CallControllerCallStorageCreateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStorageCreateV1']>>>
export type CallControllerCallStorageDeleteV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStorageDeleteV1']>>>
export type CallControllerCallStorageGetManyV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStorageGetManyV1']>>>
export type CallControllerCallStorageUpdateV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHautechAPI>['callControllerCallStorageUpdateV1']>>>
