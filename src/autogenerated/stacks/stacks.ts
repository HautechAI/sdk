/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Hautech API
 * OpenAPI spec version: 1.0
 */
import type {
  AddItemsToStackControllerParamsDto,
  CreateStackParamsDto,
  ListStacksDto,
  RemoveItemsFromCollectionControllerParamsDto,
  ResourceEntity,
  StackEntity,
  StacksControllerListStacksV1Params,
  UpdateMetadataDto
} from '.././schemas';

import { axiosMutator } from '../../api-utils';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getStacks = () => {
const stacksControllerCreateStackV1 = (
    createStackParamsDto: CreateStackParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/stacks`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createStackParamsDto
    },
      options);
    }
  const stacksControllerListStacksV1 = (
    params?: StacksControllerListStacksV1Params,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ListStacksDto>(
      {url: `/v1/stacks`, method: 'GET',
        params
    },
      options);
    }
  const stacksControllerGetStackV1 = (
    id: string,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/stacks/${id}`, method: 'GET'
    },
      options);
    }
  const stacksControllerUpdateMetadataV1 = (
    id: string,
    updateMetadataDto: UpdateMetadataDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<ResourceEntity>(
      {url: `/v1/stacks/${id}/metadata`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateMetadataDto
    },
      options);
    }
  const stacksControllerAddItemsV1 = (
    id: string,
    addItemsToStackControllerParamsDto: AddItemsToStackControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/stacks/${id}/items/add`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addItemsToStackControllerParamsDto
    },
      options);
    }
  const stacksControllerRemoveItemsV1 = (
    id: string,
    removeItemsFromCollectionControllerParamsDto: RemoveItemsFromCollectionControllerParamsDto,
 options?: SecondParameter<typeof axiosMutator>,) => {
      return axiosMutator<StackEntity>(
      {url: `/v1/stacks/${id}/items/remove`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: removeItemsFromCollectionControllerParamsDto
    },
      options);
    }
  return {stacksControllerCreateStackV1,stacksControllerListStacksV1,stacksControllerGetStackV1,stacksControllerUpdateMetadataV1,stacksControllerAddItemsV1,stacksControllerRemoveItemsV1}};
export type StacksControllerCreateStackV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStacks>['stacksControllerCreateStackV1']>>>
export type StacksControllerListStacksV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStacks>['stacksControllerListStacksV1']>>>
export type StacksControllerGetStackV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStacks>['stacksControllerGetStackV1']>>>
export type StacksControllerUpdateMetadataV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStacks>['stacksControllerUpdateMetadataV1']>>>
export type StacksControllerAddItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStacks>['stacksControllerAddItemsV1']>>>
export type StacksControllerRemoveItemsV1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getStacks>['stacksControllerRemoveItemsV1']>>>
